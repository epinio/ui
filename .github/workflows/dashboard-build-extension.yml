name: Dashboard - Build and Release Extension

on:
  push:
    branches:
      - main
    paths:
      - dashboard/pkg/epinio/package.json
  pull_request:
    branches:
      - main
    paths:
      - dashboard/**

defaults:
  run:
    shell: bash
    working-directory: ./dashboard

env:
  ACTIONS_RUNNER_DEBUG: true
  CI_COMMIT_MESSAGE: CI Build Artifacts
  # should match branches from `on` triggers
  DEFAULT_BRANCH: main
  # should match default `working-directory`
  APP_ROOT: ./dashboard

jobs:
  build:
    name: Build extension artifact
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      SHOULD_RELEASE: ${{ steps.should-release.outputs.SHOULD_RELEASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.8.0

      - name: Setup yq
        uses: chrisdickinson/setup-yq@v1.0.1
        with:
          yq-version: v4.28.2

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup yarn
        run: npm install -g yarn

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          cache-dependency-path: '${{ env.APP_ROOT }}/yarn.lock'

      - name: Install dependencies
        run: yarn

      - name: Run build script
        shell: bash
        id: build_script
        run: |
          yarn publish-pkgs -s "${{ github.repository }}" -b gh-pages

      - name: Upload charts artifact
        if: github.ref == 'refs/heads/${{ env.DEFAULT_BRANCH }}' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: charts
          path: ${{ env.APP_ROOT }}/tmp

      - name: Should Release
        id: should-release
        if: github.ref == 'refs/heads/${{ env.DEFAULT_BRANCH }}' && github.event_name != 'pull_request'
        run: |
          echo "SHOULD_RELEASE=true" >> "$GITHUB_OUTPUT"

  release:
    name: Release Build
    if: needs.build.outputs.SHOULD_RELEASE == 'true' && github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: charts
          path: ${{ env.APP_ROOT }}

      - name: Commit build
        working-directory: ./
        run: |
          cp -R ${{ env.APP_ROOT }}/{assets,charts,extensions,index.yaml} ./
          git add ./{assets,charts,extensions,index.yaml} --force
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: ./charts/*
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: true

{"version":3,"file":"epinio-1.12.0-rc6.umd.min.detail.js","mappings":"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","sources":["webpack://epinio-1.12.0-rc6/./components/application/AppGitDeployment.vue","webpack://epinio-1.12.0-rc6/./components/application/AppGitDeployment.vue?feaf","webpack://epinio-1.12.0-rc6/./detail/applications.vue?640e","webpack://epinio-1.12.0-rc6/./detail/applications.vue","webpack://epinio-1.12.0-rc6/./detail/applications.vue?7018","webpack://epinio-1.12.0-rc6/./detail/applications.vue?75bd","webpack://epinio-1.12.0-rc6/./detail/catalogservices.vue?a0bf","webpack://epinio-1.12.0-rc6/./detail/catalogservices.vue","webpack://epinio-1.12.0-rc6/./detail/catalogservices.vue?853a","webpack://epinio-1.12.0-rc6/./components/application/AppGitDeployment.vue?3f68","webpack://epinio-1.12.0-rc6/./detail/applications.vue?574f","webpack://epinio-1.12.0-rc6/./components/application/AppGitDeployment.vue?2e43"],"sourcesContent":["<script setup>\nimport day from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nday.extend(relativeTime);\n\nconst props = defineProps({\n  gitSource: {\n    type: Object,\n    default: null\n  },\n  commitPosition: {\n    type: Object,\n    default: null\n  },\n  gitDeployment: {\n    type: Object,\n    default: null\n  }\n});\n\nfunction formatDate(date, from) {\n  return from ? day(date).fromNow() : day(date).format('DD MMM YYYY');\n}\n</script>\n\n<template>\n  <div class=\"repo-info\">\n    <div class=\"repo-info-owner\">\n      <img\n        :src=\"props.gitSource.owner.avatarUrl\"\n        alt=\"\"\n      >\n      <div>\n        <a\n          ref=\"nofollow\"\n          target=\"_blank\"\n          :href=\"props.gitSource.owner.htmlUrl\"\n        >{{ props.gitSource.owner.name }}</a>\n        <span>/</span>\n        <a\n          ref=\"nofollow\"\n          target=\"_blank\"\n          :href=\"props.gitSource.htmlUrl\"\n        >{{ props.gitSource.name }}</a>\n      </div>\n    </div>\n    <div\n      v-if=\"props.gitDeployment.deployedCommit\"\n      class=\"repo-info-revision\"\n    >\n      <span>\n        <i class=\"icon icon-fw icon-commit\" />\n        {{ props.gitDeployment.deployedCommit.short }}\n\n      </span>\n      <span\n        v-if=\"props.commitPosition\"\n        class=\"masthead-state badge-state\"\n      >\n        <i class=\"icon icon-fw icon-commit\" />\n        {{ props.commitPosition.text }}\n      </span>\n    </div>\n    <div\n      v-if=\"props.gitSource.description\"\n      class=\"repo-info-description\"\n    >\n      <i class=\"icon icon-fw icon-comment\" />\n      <p>\n        {{ props.gitSource.description }}\n      </p>\n    </div>\n    <ul>\n      <li>\n        <span>{{ t('epinio.applications.detail.deployment.details.git.created') }}</span>: {{ formatDate(props.gitSource.created_at) }}\n      </li>\n      <li>\n        <span>{{ t('epinio.applications.detail.deployment.details.git.updated') }}</span>: {{ formatDate(props.gitSource.updated_at, true) }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .application-card {\n    margin-top: 0 !important;\n  }\n\n  .repo-info {\n    display: grid;\n    grid-auto-columns: minmax(0, 1fr);\n    grid-gap: 20px;\n    font-size: 14px;\n\n    &-owner {\n      display: flex;\n      align-self: center;\n      a {\n        font-size: 16px !important;\n      }\n\n      img {\n        margin-right: 8px;\n        align-self: center;\n        width: 20px;\n        border-radius: 5%;\n      }\n\n      span {\n        opacity: 0.5;\n      }\n    }\n\n    &-description, &-revision{\n      display: flex;\n      align-items: center;\n      align-self: center;\n      i {\n        opacity: 0.8;\n      }\n\n      span {\n        display: flex;\n        align-self: center;\n      }\n    }\n\n    &-revision {\n      justify-content: space-between;\n    }\n\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n      display: flex;\n      justify-content: space-between;\n\n      li {\n        font-size: 14px;\n        opacity: 0.5;\n        span {\n          color: var(--default-text);\n        }\n      }\n    }\n  }\n\n</style>\n","import script from \"./AppGitDeployment.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppGitDeployment.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AppGitDeployment.vue?vue&type=style&index=0&id=60560944&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60560944\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"content\" }\nconst _hoisted_2 = { class: \"application-details\" }\nconst _hoisted_3 = [\"href\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"mt-20\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"deployment\"\n}\nconst _hoisted_6 = { class: \"simple-box-row app-instances\" }\nconst _hoisted_7 = { class: \"scale-instances\" }\nconst _hoisted_8 = { class: \"deployment__origin__row\" }\nconst _hoisted_9 = { class: \"mt-10 mb-10\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"stats\"\n}\nconst _hoisted_11 = {\n  key: 1,\n  class: \"stats-table\"\n}\nconst _hoisted_12 = { class: \"mt-15\" }\nconst _hoisted_13 = { class: \"mb-10 deployment__details__header\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"repo-info\"\n}\nconst _hoisted_15 = { class: \"deployment__origin__list\" }\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = [\"href\"]\nconst _hoisted_18 = { key: 1 }\nconst _hoisted_19 = [\"href\"]\nconst _hoisted_20 = { key: 2 }\nconst _hoisted_21 = { class: \"sortable-table-avatar\" }\nconst _hoisted_22 = [\"src\"]\nconst _hoisted_23 = [\"href\"]\nconst _hoisted_24 = { class: \"sortable-table-commit\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"icon icon-fw icon-commit\"\n}\nconst _hoisted_26 = { class: \"mt-20\" }\n\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport day from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport Application from '../models/applications';\nimport SimpleBox from '@shell/components/SimpleBox.vue';\nimport { GitUtils } from '@shell/utils/git';\nimport { isArray } from '@shell/utils/array';\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge.vue';\nimport { APPLICATION_MANIFEST_SOURCE_TYPE, EPINIO_TYPES, EPINIO_PRODUCT_NAME } from '../types';\nimport ResourceTable from '@shell/components/ResourceTable.vue';\nimport PlusMinus from '@shell/components/form/PlusMinus.vue';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport ApplicationCard from '@components/RcItemCard/RcItemCard.vue';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport SortableTable from '@shell/components/SortableTable/index.vue';\nimport AppGitDeployment from '../components/application/AppGitDeployment.vue';\nimport Link from '@shell/components/formatter/Link.vue';\nimport Banner from '@components/Banner/Banner.vue';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'applications',\n  props: {\n    value: {},\n    initialValue: {},\n    mode: {}\n  },\n  setup(__props: any) {\n\nday.extend(relativeTime);\n\nconst props = __props;\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst saving = ref(false);\nconst gitSource = ref<any>(null);\nconst gitDeployment = ref({\n  deployedCommit: { short: '', long: '' },\n  commits: null as any\n});\n\nconst appInstanceSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.APP_INSTANCE);\nconst servicesSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.SERVICE_INSTANCE);\nconst servicesHeaders = store.getters['type-map/headersFor'](servicesSchema);\nconst configsSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.CONFIGURATION);\nconst configsHeaders = store.getters['type-map/headersFor'](configsSchema);\n\nconst appInstance = {\n  schema: appInstanceSchema,\n  headers: store.getters['type-map/headersFor'](appInstanceSchema)\n};\n\nconst services = {\n  schema: servicesSchema,\n  headers: servicesHeaders.filter((h: any) => !['namespace', 'boundApps'].includes(h.name))\n};\n\nconst configs = {\n  schema: configsSchema,\n  headers: configsHeaders.filter((h: any) => !['namespace', 'boundApps', 'service'].includes(h.name))\n};\n\nconst commitActions = [{\n  action: 'editFromCommit',\n  label: t('epinio.applications.actions.editFromCommit.label'),\n  icon: 'icon icon-edit',\n  enabled: true\n}];\n\nonMounted(async () => {\n  await store.dispatch('epinio/findAll', { type: EPINIO_TYPES.SERVICE_INSTANCE });\n  await store.dispatch('epinio/findAll', { type: EPINIO_TYPES.CONFIGURATION });\n\n  if (props.value.appSource.git) {\n    await fetchRepoDetails();\n    setCommitDetails();\n  }\n});\n\nasync function updateInstances(newInstances: number) {\n  saving.value = true;\n  try {\n    props.value.configuration.instances = newInstances;\n    await props.value.update();\n    await props.value.forceFetch();\n  } catch (err) {\n    console.error(`Failed to scale Application: `, epinioExceptionToErrorsArray(err));\n  }\n  saving.value = false;\n}\n\nfunction formatURL(str: string) {\n  const matchGit = str.match('^(https|git)(:\\/\\/|@)([^\\/:]+)[\\/:]([^\\/:]+)\\/(.+)(.git)*$'); // eslint-disable-line no-useless-escape\n  return `${matchGit?.[4]}/${matchGit?.[5]}`;\n}\n\nasync function fetchRepoDetails() {\n  const { usernameOrOrg, repo } = props.value.appSource.git;\n  const res = await store.dispatch(`${gitType.value}/fetchRepoDetails`, { username: usernameOrOrg, repo });\n\n  gitSource.value = GitUtils[gitType.value].normalize.repo(res);\n  await fetchCommits();\n}\n\nasync function fetchCommits() {\n  const { usernameOrOrg, repo, branch } = props.value.appSource.git;\n\n  if (branch?.name) {\n    gitDeployment.value.commits = await store.dispatch(`${gitType.value}/fetchCommits`, {\n      username: usernameOrOrg, repo, branch\n    });\n  }\n}\n\nfunction setCommitDetails() {\n  const { commit } = props.value.appSource.git;\n  const selectedCommit = preparedCommits.value.find((c) => c.commitId === commit);\n\n  gitDeployment.value.deployedCommit = {\n    short: selectedCommit?.commitId?.slice(0, 7),\n    long: selectedCommit.commitId\n  };\n}\n\nconst gitType = computed(() => props.value.appSource?.type || null);\n\nconst preparedCommits = computed(() => {\n  const commits = gitDeployment.value.commits;\n\n  if (!commits) {\n    return [];\n  }\n\n  const arr = isArray(commits) ? commits : [commits];\n\n  return arr.map((c: { sha: any; id: any; }) => ({\n    ...GitUtils[gitType.value].normalize.commit(c),\n    availableActions: commitActions,\n    editFromCommit: () => props.value.goToEdit({ commit: c.sha || c.id })\n  }));\n});\n\nconst commitsHeaders = computed(() => [\n  {\n    name: 'sha',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.sha.label`),\n    width: 100\n  },\n  {\n    name: 'author',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.author.label`),\n    width: 190,\n    value: 'author.login',\n    sort: 'author.login'\n  },\n  {\n    name: 'message',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.message.label`),\n    value: 'message',\n    sort: 'message'\n  },\n  {\n    name: 'date',\n    width: 220,\n    label: t(`gitPicker.${gitType.value}.tableHeaders.date.label`),\n    value: 'date',\n    sort: ['date:desc'],\n    formatter: 'Date',\n    defaultSort: true\n  }\n]);\n\nconst sourceIcon = computed(() => props.value.appSourceInfo?.icon || 'icon-epinio');\n\nconst commitPosition = computed(() => {\n  if (!preparedCommits.value.length && !gitDeployment.value.deployedCommit) {\n    return null;\n  }\n\n  let idx: number | null = null;\n\n  preparedCommits.value.forEach((ele: { commitId: string; }, i: number) => {\n    if (ele.commitId === gitDeployment.value?.deployedCommit?.long) {\n      idx = i - 1;\n    }\n  });\n\n  if (idx === null || idx < 0) {\n    return {\n      text: t('epinio.applications.gitSource.latestCommit'),\n      position: 0\n    };\n  }\n\n  return {\n    text: `${idx} ${t('epinio.applications.gitSource.behindCommits')}`,\n    position: idx\n  };\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _directive_tooltip = _resolveDirective(\"tooltip\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(ApplicationCard, null, {\n        cardIcon: _withCtx(() => [\n          _createElementVNode(\"i\", {\n            class: _normalizeClass([\"icon icon-fw\", sourceIcon.value])\n          }, null, 2)\n        ]),\n        \"top-left\": _withCtx(() => [\n          _cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Routes\", -1)),\n          _createElementVNode(\"ul\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.value.configuration.routes, (route) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: route.id\n              }, [\n                (_ctx.value.state === 'running')\n                  ? (_openBlock(), _createElementBlock(\"a\", {\n                      key: route.id + 'a',\n                      href: `https://${route}`,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer nofollow\"\n                    }, _toDisplayString(`https://${route}`), 9, _hoisted_3))\n                  : (_openBlock(), _createElementBlock(\"span\", {\n                      key: route.id + 'b'\n                    }, _toDisplayString(`https://${route}`), 1))\n              ]))\n            }), 128))\n          ])\n        ]),\n        resourcesCount: _withCtx(() => [\n          _createElementVNode(\"div\", null, _toDisplayString(_ctx.value.envCount) + \" \" + _toDisplayString(_unref(t)('epinio.applications.detail.counts.envVars')), 1),\n          _createElementVNode(\"div\", null, _toDisplayString(_ctx.value.serviceConfigurations.length) + \" \" + _toDisplayString(_unref(t)('epinio.applications.detail.counts.services')), 1),\n          _createElementVNode(\"div\", null, _toDisplayString(_ctx.value.baseConfigurations.length) + \" \" + _toDisplayString(_unref(t)('epinio.applications.detail.counts.config')), 1)\n        ]),\n        _: 1\n      })\n    ]),\n    (_ctx.value.deployment)\n      ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_4, _toDisplayString(_unref(t)('epinio.applications.detail.deployment.label')), 1))\n      : _createCommentVNode(\"\", true),\n    (_ctx.value.deployment)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createVNode(Tabbed, null, {\n            default: _withCtx(() => [\n              _createVNode(Tab, {\n                \"label-key\": \"epinio.applications.detail.tables.overview\",\n                name: \"overview\",\n                weight: 3\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_6, [\n                    _createVNode(SimpleBox, null, {\n                      default: _withCtx(() => [\n                        _createVNode(ConsumptionGauge, {\n                          \"resource-name\": _unref(t)('epinio.applications.detail.deployment.instances'),\n                          capacity: _ctx.value.desiredInstances,\n                          used: _ctx.value.readyInstances,\n                          \"used-as-resource-name\": true,\n                          \"color-stops\": { 70: '--success', 30: '--warning', 0: '--error' }\n                        }, null, 8, [\"resource-name\", \"capacity\", \"used\"]),\n                        _createElementVNode(\"div\", _hoisted_7, [\n                          _createVNode(PlusMinus, {\n                            value: _ctx.value.desiredInstances,\n                            \"onUpdate:value\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.value.desiredInstances) = $event)),\n                            class: \"mt-15 mb-10\",\n                            disabled: saving.value,\n                            onMinus: _cache[1] || (_cache[1] = ($event: any) => (updateInstances(_ctx.value.desiredInstances - 1))),\n                            onPlus: _cache[2] || (_cache[2] = ($event: any) => (updateInstances(_ctx.value.desiredInstances + 1)))\n                          }, null, 8, [\"value\", \"disabled\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_8, [\n                          _cache[11] || (_cache[11] = _createElementVNode(\"hr\", { class: \"mt-10 mb-10\" }, null, -1)),\n                          _createElementVNode(\"h4\", _hoisted_9, _toDisplayString(_unref(t)('epinio.applications.detail.deployment.metrics')), 1),\n                          (gitSource.value)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                                _createElementVNode(\"div\", null, [\n                                  _createElementVNode(\"h3\", null, _toDisplayString(_unref(t)('tableHeaders.memory')), 1),\n                                  _createElementVNode(\"ul\", null, [\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Min: \", -1)),\n                                      _createTextVNode(\" \" + _toDisplayString(_ctx.value.instanceMemory.min), 1)\n                                    ]),\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"Max: \", -1)),\n                                      _createTextVNode(_toDisplayString(_ctx.value.instanceMemory.max), 1)\n                                    ]),\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"Avg: \", -1)),\n                                      _createTextVNode(_toDisplayString(_ctx.value.instanceMemory.avg), 1)\n                                    ])\n                                  ])\n                                ]),\n                                _createElementVNode(\"div\", null, [\n                                  _createElementVNode(\"h3\", null, _toDisplayString(_unref(t)('tableHeaders.cpu')), 1),\n                                  _createElementVNode(\"ul\", null, [\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[7] || (_cache[7] = _createElementVNode(\"span\", null, \"Min: \", -1)),\n                                      _createTextVNode(\" \" + _toDisplayString(_ctx.value.instanceCpu.min), 1)\n                                    ]),\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"Max: \", -1)),\n                                      _createTextVNode(_toDisplayString(_ctx.value.instanceCpu.max), 1)\n                                    ]),\n                                    _createElementVNode(\"li\", null, [\n                                      _cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"Avg: \", -1)),\n                                      _createTextVNode(_toDisplayString(_ctx.value.instanceCpu.avg), 1)\n                                    ])\n                                  ])\n                                ])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                                _createElementVNode(\"table\", _hoisted_12, [\n                                  _cache[10] || (_cache[10] = _createElementVNode(\"thead\", null, [\n                                    _createElementVNode(\"tr\", null, [\n                                      _createElementVNode(\"th\"),\n                                      _createElementVNode(\"th\", null, \"Min\"),\n                                      _createElementVNode(\"th\", null, \"Max\"),\n                                      _createElementVNode(\"th\", null, \"Avg\")\n                                    ])\n                                  ], -1)),\n                                  _createElementVNode(\"tbody\", null, [\n                                    _createElementVNode(\"tr\", null, [\n                                      _createElementVNode(\"td\", null, _toDisplayString(_unref(t)('tableHeaders.memory')), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceMemory.min), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceMemory.max), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceMemory.avg), 1)\n                                    ]),\n                                    _createElementVNode(\"tr\", null, [\n                                      _createElementVNode(\"td\", null, _toDisplayString(_unref(t)('tableHeaders.cpu')), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceCpu.min), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceCpu.max), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(_ctx.value.instanceCpu.avg), 1)\n                                    ])\n                                  ])\n                                ])\n                              ]))\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    (_ctx.value.appSourceInfo)\n                      ? (_openBlock(), _createBlock(SimpleBox, { key: 0 }, {\n                          default: _withCtx(() => [\n                            _createElementVNode(\"div\", _hoisted_13, [\n                              (_ctx.value.appSourceInfo.kind === _unref(APPLICATION_MANIFEST_SOURCE_TYPE).GIT)\n                                ? (_openBlock(), _createElementBlock(\"i\", {\n                                    key: 0,\n                                    class: _normalizeClass([\"icon git-icon\", {[`icon-${gitType.value}`]: true}])\n                                  }, null, 2))\n                                : _createCommentVNode(\"\", true),\n                              _createElementVNode(\"h4\", null, _toDisplayString(_unref(t)('epinio.applications.detail.deployment.details.label')), 1)\n                            ]),\n                            (gitSource.value)\n                              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                                  _createVNode(AppGitDeployment, {\n                                    \"git-deployment\": gitDeployment.value,\n                                    \"git-source\": gitSource.value,\n                                    \"commit-position\": commitPosition.value\n                                  }, null, 8, [\"git-deployment\", \"git-source\", \"commit-position\"])\n                                ]))\n                              : _createCommentVNode(\"\", true),\n                            _cache[12] || (_cache[12] = _createElementVNode(\"hr\", { class: \"mt-10 mb-10\" }, null, -1)),\n                            _createElementVNode(\"div\", _hoisted_15, [\n                              _createElementVNode(\"ul\", null, [\n                                _createElementVNode(\"li\", null, [\n                                  _createElementVNode(\"h4\", null, _toDisplayString(_unref(t)('epinio.applications.detail.deployment.details.origin')), 1),\n                                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.value.appSourceInfo.label), 1)\n                                ]),\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.value.appSourceInfo.details, (d) => {\n                                  return (_openBlock(), _createElementBlock(\"li\", {\n                                    key: d.label\n                                  }, [\n                                    _createElementVNode(\"h4\", null, _toDisplayString(d.label), 1),\n                                    (d.value && d.value.startsWith('http'))\n                                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, [\n                                          _createElementVNode(\"a\", {\n                                            href: d.value,\n                                            target: \"_blank\"\n                                          }, _toDisplayString(formatURL(d.value)), 9, _hoisted_17)\n                                        ]))\n                                      : (gitSource.value && d.value && d.value.match(/^[a-f0-9]{40}$/))\n                                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, [\n                                            _createElementVNode(\"a\", {\n                                              href: `${gitSource.value.htmlUrl}/commit/${d.value}`,\n                                              target: \"_blank\"\n                                            }, _toDisplayString(d.value), 9, _hoisted_19)\n                                          ]))\n                                        : (_openBlock(), _createElementBlock(\"span\", _hoisted_20, _toDisplayString(d.value), 1))\n                                  ]))\n                                }), 128)),\n                                _createElementVNode(\"li\", null, [\n                                  _createElementVNode(\"h4\", null, _toDisplayString(_unref(t)('epinio.applications.tableHeaders.deployedBy')), 1),\n                                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.value.deployment.username), 1)\n                                ])\n                              ])\n                            ])\n                          ]),\n                          _: 1,\n                          __: [12]\n                        }))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _: 1\n              }),\n              (gitSource.value && preparedCommits.value.length)\n                ? (_openBlock(), _createBlock(Tab, {\n                    key: 0,\n                    \"label-key\": \"epinio.applications.detail.tables.gitCommits\",\n                    name: \"gitCommits\",\n                    weight: 2\n                  }, {\n                    default: _withCtx(() => [\n                      (preparedCommits.value)\n                        ? (_openBlock(), _createBlock(SortableTable, {\n                            key: 0,\n                            rows: preparedCommits.value,\n                            headers: commitsHeaders.value,\n                            mode: \"view\",\n                            \"key-field\": \"sha\",\n                            search: true,\n                            paging: true,\n                            \"table-actions\": false,\n                            \"rows-per-page\": 10\n                          }, {\n                            \"header-left\": _withCtx(() => [\n                              _createVNode(Banner, {\n                                color: \"info\",\n                                class: \"redeploy-info\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(_unref(t)('epinio.applications.detail.deployment.commits.redeploy')), 1)\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            \"cell:author\": _withCtx(({row}) => [\n                              _createElementVNode(\"div\", _hoisted_21, [\n                                (row.author)\n                                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                                      _createElementVNode(\"img\", {\n                                        src: row.author.avatarUrl,\n                                        alt: \"\"\n                                      }, null, 8, _hoisted_22),\n                                      _createElementVNode(\"a\", {\n                                        href: row.author.htmlUrl,\n                                        target: \"_blank\",\n                                        rel: \"nofollow noopener noreferrer\"\n                                      }, _toDisplayString(row.author.name), 9, _hoisted_23)\n                                    ], 64))\n                                  : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                                      _createTextVNode(_toDisplayString(_unref(t)(`gitPicker.${ gitType.value }.tableHeaders.author.unknown`)), 1)\n                                    ], 64))\n                              ])\n                            ]),\n                            \"cell:sha\": _withCtx(({row}) => [\n                              _createElementVNode(\"div\", _hoisted_24, [\n                                _createVNode(Link, {\n                                  value: row.sha,\n                                  \"onUpdate:value\": ($event: any) => ((row.sha) = $event),\n                                  row: row,\n                                  \"url-key\": \"htmlUrl\"\n                                }, null, 8, [\"value\", \"onUpdate:value\", \"row\"]),\n                                (row.commitId === gitDeployment.value.deployedCommit.long)\n                                  ? _withDirectives((_openBlock(), _createElementBlock(\"i\", _hoisted_25, null, 512)), [\n                                      [_directive_tooltip, _unref(t)('epinio.applications.detail.deployment.details.git.deployed')]\n                                    ])\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ]),\n                            _: 1\n                          }, 8, [\"rows\", \"headers\"]))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"h3\", _hoisted_26, _toDisplayString(_unref(t)('epinio.applications.detail.tables.label')), 1),\n    _createElementVNode(\"div\", null, [\n      _createVNode(Tabbed, null, {\n        default: _withCtx(() => [\n          _createVNode(Tab, {\n            \"label-key\": \"epinio.applications.detail.tables.instances\",\n            name: \"instances\",\n            weight: 3\n          }, {\n            default: _withCtx(() => [\n              _createVNode(ResourceTable, {\n                schema: appInstance.schema,\n                headers: appInstance.headers,\n                rows: _ctx.value.instances,\n                \"table-actions\": false\n              }, null, 8, [\"schema\", \"headers\", \"rows\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(Tab, {\n            \"label-key\": \"epinio.applications.detail.tables.services\",\n            name: \"services\",\n            weight: 2\n          }, {\n            default: _withCtx(() => [\n              _createVNode(ResourceTable, {\n                schema: services.schema,\n                headers: services.headers,\n                rows: _ctx.value.services,\n                namespaced: false,\n                \"table-actions\": false\n              }, null, 8, [\"schema\", \"headers\", \"rows\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(Tab, {\n            \"label-key\": \"epinio.applications.detail.tables.configs\",\n            name: \"configs\",\n            weight: 1\n          }, {\n            default: _withCtx(() => [\n              _createVNode(ResourceTable, {\n                schema: configs.schema,\n                headers: configs.headers,\n                rows: _ctx.value.baseConfigurations,\n                namespaced: false,\n                \"table-actions\": false\n              }, null, 8, [\"schema\", \"headers\", \"rows\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ])\n  ]))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { ref, computed, defineProps, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport day from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport Application from '../models/applications';\nimport SimpleBox from '@shell/components/SimpleBox.vue';\nimport { GitUtils } from '@shell/utils/git';\nimport { isArray } from '@shell/utils/array';\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge.vue';\nimport { APPLICATION_MANIFEST_SOURCE_TYPE, EPINIO_TYPES, EPINIO_PRODUCT_NAME } from '../types';\nimport ResourceTable from '@shell/components/ResourceTable.vue';\nimport PlusMinus from '@shell/components/form/PlusMinus.vue';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport ApplicationCard from '@components/RcItemCard/RcItemCard.vue';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport SortableTable from '@shell/components/SortableTable/index.vue';\nimport AppGitDeployment from '../components/application/AppGitDeployment.vue';\nimport Link from '@shell/components/formatter/Link.vue';\nimport Banner from '@components/Banner/Banner.vue';\n\nday.extend(relativeTime);\n\nconst props = defineProps<{\n  value: Application;\n  initialValue: Application;\n  mode: string;\n}>();\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst saving = ref(false);\nconst gitSource = ref<any>(null);\nconst gitDeployment = ref({\n  deployedCommit: { short: '', long: '' },\n  commits: null as any\n});\n\nconst appInstanceSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.APP_INSTANCE);\nconst servicesSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.SERVICE_INSTANCE);\nconst servicesHeaders = store.getters['type-map/headersFor'](servicesSchema);\nconst configsSchema = store.getters[`${EPINIO_PRODUCT_NAME}/schemaFor`](EPINIO_TYPES.CONFIGURATION);\nconst configsHeaders = store.getters['type-map/headersFor'](configsSchema);\n\nconst appInstance = {\n  schema: appInstanceSchema,\n  headers: store.getters['type-map/headersFor'](appInstanceSchema)\n};\n\nconst services = {\n  schema: servicesSchema,\n  headers: servicesHeaders.filter((h: any) => !['namespace', 'boundApps'].includes(h.name))\n};\n\nconst configs = {\n  schema: configsSchema,\n  headers: configsHeaders.filter((h: any) => !['namespace', 'boundApps', 'service'].includes(h.name))\n};\n\nconst commitActions = [{\n  action: 'editFromCommit',\n  label: t('epinio.applications.actions.editFromCommit.label'),\n  icon: 'icon icon-edit',\n  enabled: true\n}];\n\nonMounted(async () => {\n  await store.dispatch('epinio/findAll', { type: EPINIO_TYPES.SERVICE_INSTANCE });\n  await store.dispatch('epinio/findAll', { type: EPINIO_TYPES.CONFIGURATION });\n\n  if (props.value.appSource.git) {\n    await fetchRepoDetails();\n    setCommitDetails();\n  }\n});\n\nasync function updateInstances(newInstances: number) {\n  saving.value = true;\n  try {\n    props.value.configuration.instances = newInstances;\n    await props.value.update();\n    await props.value.forceFetch();\n  } catch (err) {\n    console.error(`Failed to scale Application: `, epinioExceptionToErrorsArray(err));\n  }\n  saving.value = false;\n}\n\nfunction formatURL(str: string) {\n  const matchGit = str.match('^(https|git)(:\\/\\/|@)([^\\/:]+)[\\/:]([^\\/:]+)\\/(.+)(.git)*$'); // eslint-disable-line no-useless-escape\n  return `${matchGit?.[4]}/${matchGit?.[5]}`;\n}\n\nasync function fetchRepoDetails() {\n  const { usernameOrOrg, repo } = props.value.appSource.git;\n  const res = await store.dispatch(`${gitType.value}/fetchRepoDetails`, { username: usernameOrOrg, repo });\n\n  gitSource.value = GitUtils[gitType.value].normalize.repo(res);\n  await fetchCommits();\n}\n\nasync function fetchCommits() {\n  const { usernameOrOrg, repo, branch } = props.value.appSource.git;\n\n  if (branch?.name) {\n    gitDeployment.value.commits = await store.dispatch(`${gitType.value}/fetchCommits`, {\n      username: usernameOrOrg, repo, branch\n    });\n  }\n}\n\nfunction setCommitDetails() {\n  const { commit } = props.value.appSource.git;\n  const selectedCommit = preparedCommits.value.find((c) => c.commitId === commit);\n\n  gitDeployment.value.deployedCommit = {\n    short: selectedCommit?.commitId?.slice(0, 7),\n    long: selectedCommit.commitId\n  };\n}\n\nconst gitType = computed(() => props.value.appSource?.type || null);\n\nconst preparedCommits = computed(() => {\n  const commits = gitDeployment.value.commits;\n\n  if (!commits) {\n    return [];\n  }\n\n  const arr = isArray(commits) ? commits : [commits];\n\n  return arr.map((c: { sha: any; id: any; }) => ({\n    ...GitUtils[gitType.value].normalize.commit(c),\n    availableActions: commitActions,\n    editFromCommit: () => props.value.goToEdit({ commit: c.sha || c.id })\n  }));\n});\n\nconst commitsHeaders = computed(() => [\n  {\n    name: 'sha',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.sha.label`),\n    width: 100\n  },\n  {\n    name: 'author',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.author.label`),\n    width: 190,\n    value: 'author.login',\n    sort: 'author.login'\n  },\n  {\n    name: 'message',\n    label: t(`gitPicker.${gitType.value}.tableHeaders.message.label`),\n    value: 'message',\n    sort: 'message'\n  },\n  {\n    name: 'date',\n    width: 220,\n    label: t(`gitPicker.${gitType.value}.tableHeaders.date.label`),\n    value: 'date',\n    sort: ['date:desc'],\n    formatter: 'Date',\n    defaultSort: true\n  }\n]);\n\nconst sourceIcon = computed(() => props.value.appSourceInfo?.icon || 'icon-epinio');\n\nconst commitPosition = computed(() => {\n  if (!preparedCommits.value.length && !gitDeployment.value.deployedCommit) {\n    return null;\n  }\n\n  let idx: number | null = null;\n\n  preparedCommits.value.forEach((ele: { commitId: string; }, i: number) => {\n    if (ele.commitId === gitDeployment.value?.deployedCommit?.long) {\n      idx = i - 1;\n    }\n  });\n\n  if (idx === null || idx < 0) {\n    return {\n      text: t('epinio.applications.gitSource.latestCommit'),\n      position: 0\n    };\n  }\n\n  return {\n    text: `${idx} ${t('epinio.applications.gitSource.behindCommits')}`,\n    position: idx\n  };\n});\n</script>\n\n<template>\n  <div class=\"content\">\n    <div class=\"application-details\">\n      <ApplicationCard>\n        <!-- Icon slot -->\n        <template #cardIcon>\n          <i\n            class=\"icon icon-fw\"\n            :class=\"sourceIcon\"\n          />\n        </template>\n\n        <!-- Routes links slot -->\n        <template #top-left>\n          <h1>Routes</h1>\n          <ul>\n            <li\n              v-for=\"route in value.configuration.routes\"\n              :key=\"route.id\"\n            >\n              <a\n                v-if=\"value.state === 'running'\"\n                :key=\"route.id + 'a'\"\n                :href=\"`https://${route}`\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n              >{{ `https://${route}` }}</a>\n              <span\n                v-else\n                :key=\"route.id + 'b'\"\n              >{{ `https://${route}` }}</span>\n            </li>\n          </ul>\n        </template>\n\n        <!-- <template v-slot:top-right>\n        </template> -->\n\n        <!-- Resources count slot -->\n        <template #resourcesCount>\n          <div>\n            {{ value.envCount }} {{ t('epinio.applications.detail.counts.envVars') }}\n          </div>\n          <div>\n            {{ value.serviceConfigurations.length }} {{ t('epinio.applications.detail.counts.services') }}\n          </div>\n          <div>\n            {{ value.baseConfigurations.length }} {{ t('epinio.applications.detail.counts.config') }}\n          </div>\n        </template>\n      </ApplicationCard>\n    </div>\n\n    <h3\n      v-if=\"value.deployment\"\n      class=\"mt-20\"\n    >\n      {{ t('epinio.applications.detail.deployment.label') }}\n    </h3>\n\n    <div\n      v-if=\"value.deployment\"\n      class=\"deployment\"\n    >\n      <!-- Source information -->\n      <Tabbed>\n        <Tab\n          label-key=\"epinio.applications.detail.tables.overview\"\n          name=\"overview\"\n          :weight=\"3\"\n        >\n          <div class=\"simple-box-row app-instances\">\n            <SimpleBox>\n              <ConsumptionGauge\n                :resource-name=\"t('epinio.applications.detail.deployment.instances')\"\n                :capacity=\"value.desiredInstances\"\n                :used=\"value.readyInstances\"\n                :used-as-resource-name=\"true\"\n                :color-stops=\"{ 70: '--success', 30: '--warning', 0: '--error' }\"\n              />\n              <div class=\"scale-instances\">\n                <PlusMinus\n                  v-model:value=\"value.desiredInstances\"\n                  class=\"mt-15 mb-10\"\n                  :disabled=\"saving\"\n                  @minus=\"updateInstances(value.desiredInstances - 1)\"\n                  @plus=\"updateInstances(value.desiredInstances + 1)\"\n                />\n              </div>\n\n              <div class=\"deployment__origin__row\">\n                <hr class=\"mt-10 mb-10\">\n                <h4 class=\"mt-10 mb-10\">\n                  {{ t('epinio.applications.detail.deployment.metrics') }}\n                </h4>\n                <div\n                  v-if=\"gitSource\"\n                  class=\"stats\"\n                >\n                  <div>\n                    <h3>{{ t('tableHeaders.memory') }}</h3>\n                    <ul>\n                      <li> <span>Min: </span> {{ value.instanceMemory.min }}</li>\n                      <li> <span>Max: </span>{{ value.instanceMemory.max }}</li>\n                      <li><span>Avg: </span>{{ value.instanceMemory.avg }}</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h3>{{ t('tableHeaders.cpu') }}</h3>\n                    <ul>\n                      <li> <span>Min: </span> {{ value.instanceCpu.min }}</li>\n                      <li> <span>Max: </span>{{ value.instanceCpu.max }}</li>\n                      <li><span>Avg: </span>{{ value.instanceCpu.avg }}</li>\n                    </ul>\n                  </div>\n                </div>\n\n                <div\n                  v-else\n                  class=\"stats-table\"\n                >\n                  <table class=\"mt-15\">\n                    <thead>\n                      <tr>\n                        <th />\n                        <th>Min</th>\n                        <th>Max</th>\n                        <th>Avg</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{{ t('tableHeaders.memory') }}</td>\n                            <td>{{ value.instanceMemory.min }}</td>\n                            <td>{{ value.instanceMemory.max }}</td>\n                            <td>{{ value.instanceMemory.avg }}</td>\n                        </tr>\n                        <tr>\n                            <td>{{ t('tableHeaders.cpu') }}</td>\n                            <td>{{ value.instanceCpu.min }}</td>\n                            <td>{{ value.instanceCpu.max }}</td>\n                            <td>{{ value.instanceCpu.avg }}</td>\n                        </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </SimpleBox>\n            <SimpleBox v-if=\"value.appSourceInfo\">\n              <div class=\"mb-10 deployment__details__header\">\n                <i\n                  v-if=\"value.appSourceInfo.kind === APPLICATION_MANIFEST_SOURCE_TYPE.GIT\"\n                  class=\"icon git-icon\"\n                  :class=\"{[`icon-${gitType}`]: true}\"\n                />\n                <h4>{{ t('epinio.applications.detail.deployment.details.label') }}</h4>\n              </div>\n              <div\n                v-if=\"gitSource\"\n                class=\"repo-info\"\n              >\n                <AppGitDeployment\n                  :git-deployment=\"gitDeployment\"\n                  :git-source=\"gitSource\"\n                  :commit-position=\"commitPosition\"\n                />\n              </div>\n              <hr class=\"mt-10 mb-10\">\n              <div class=\"deployment__origin__list\">\n                <ul>\n                  <li>\n                    <h4>{{ t('epinio.applications.detail.deployment.details.origin') }}</h4>\n                    <span>{{ value.appSourceInfo.label }}</span>\n                  </li>\n\n                  <li\n                    v-for=\"d of value.appSourceInfo.details\"\n                    :key=\"d.label\"\n                  >\n                    <h4>{{ d.label }}</h4>\n                    <span v-if=\"d.value && d.value.startsWith('http')\">\n                      <a\n                        :href=\"d.value\"\n                        target=\"_blank\"\n                      >{{ formatURL(d.value) }}</a>\n                    </span>\n                    <span v-else-if=\"gitSource && d.value && d.value.match(/^[a-f0-9]{40}$/)\">\n                      <a\n                        :href=\"`${gitSource.htmlUrl}/commit/${d.value}`\"\n                        target=\"_blank\"\n                      >{{ d.value }}</a>\n                    </span>\n                    <span v-else>{{ d.value }}</span>\n                  </li>\n\n                  <li>\n                    <h4>{{ t('epinio.applications.tableHeaders.deployedBy') }}</h4>\n                    <span> {{ value.deployment.username }}</span>\n                  </li>\n                </ul>\n              </div>\n            </SimpleBox>\n          </div>\n        </Tab>\n        <Tab\n          v-if=\"gitSource && preparedCommits.length\"\n          label-key=\"epinio.applications.detail.tables.gitCommits\"\n          name=\"gitCommits\"\n          :weight=\"2\"\n        >\n          <SortableTable\n            v-if=\"preparedCommits\"\n            :rows=\"preparedCommits\"\n            :headers=\"commitsHeaders\"\n            mode=\"view\"\n            key-field=\"sha\"\n            :search=\"true\"\n            :paging=\"true\"\n            :table-actions=\"false\"\n            :rows-per-page=\"10\"\n          >\n            <template #header-left>\n              <Banner\n                color=\"info\"\n                class=\"redeploy-info\"\n              >\n                {{ t('epinio.applications.detail.deployment.commits.redeploy') }}\n              </Banner>\n            </template>\n            <template #cell:author=\"{row}\">\n              <div class=\"sortable-table-avatar\">\n                <template v-if=\"row.author\">\n                  <img\n                    :src=\"row.author.avatarUrl\"\n                    alt=\"\"\n                  >\n                  <a\n                    :href=\"row.author.htmlUrl\"\n                    target=\"_blank\"\n                    rel=\"nofollow noopener noreferrer\"\n                  >\n                    {{ row.author.name }}\n                  </a>\n                </template>\n                <template v-else>\n                  {{ t(`gitPicker.${ gitType }.tableHeaders.author.unknown`) }}\n                </template>\n              </div>\n            </template>\n\n            <template #cell:sha=\"{row}\">\n              <div class=\"sortable-table-commit\">\n                <Link\n                  v-model:value=\"row.sha\"\n                  :row=\"row\"\n                  url-key=\"htmlUrl\"\n                />\n                <i\n                  v-if=\"row.commitId === gitDeployment.deployedCommit.long\"\n                  v-tooltip=\"t('epinio.applications.detail.deployment.details.git.deployed')\"\n                  class=\"icon icon-fw icon-commit\"\n                />\n              </div>\n            </template>\n          </SortableTable>\n        </Tab>\n      </Tabbed>\n    </div>\n\n    <h3 class=\"mt-20\">\n      {{ t('epinio.applications.detail.tables.label') }}\n    </h3>\n\n    <div>\n      <Tabbed>\n        <Tab\n          label-key=\"epinio.applications.detail.tables.instances\"\n          name=\"instances\"\n          :weight=\"3\"\n        >\n          <ResourceTable\n            :schema=\"appInstance.schema\"\n            :headers=\"appInstance.headers\"\n            :rows=\"value.instances\"\n            :table-actions=\"false\"\n          />\n        </Tab>\n        <Tab\n          label-key=\"epinio.applications.detail.tables.services\"\n          name=\"services\"\n          :weight=\"2\"\n        >\n          <ResourceTable\n            :schema=\"services.schema\"\n            :headers=\"services.headers\"\n            :rows=\"value.services\"\n            :namespaced=\"false\"\n            :table-actions=\"false\"\n          />\n        </Tab>\n        <Tab\n          label-key=\"epinio.applications.detail.tables.configs\"\n          name=\"configs\"\n          :weight=\"1\"\n        >\n          <ResourceTable\n            :schema=\"configs.schema\"\n            :headers=\"configs.headers\"\n            :rows=\"value.baseConfigurations\"\n            :namespaced=\"false\"\n            :table-actions=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n    \n  </div>\n</template>\n\n\n<style lang=\"scss\" scoped>\n.content {\n  max-width: 1600px;\n}\n.simple-box-row {\n  display: grid;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-auto-flow: column;\n  grid-gap: 10px;\n\n  @media only screen and (max-width: map-get($breakpoints, '--viewport-9')) {\n    grid-auto-flow: row;\n  }\n  .simple-box {\n    width: 100%;\n    ul {\n      word-break: break-all;\n    }\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n    .deployment__origin__row {\n      display: flex;\n      flex-direction: column;\n      h4:first-of-type {\n        font-weight: bold;\n        margin-bottom: 0;\n      }\n      h4:last-of-type {\n        word-break: break-all;\n      }\n      &:last-of-type {\n        h4:last-of-type {\n          margin-bottom: 0;\n        }\n      }\n      thead {\n        tr {\n          th {\n            text-align: left;\n            color: var(--muted);\n            font-weight: 300;\n          }\n        }\n      }\n    }\n\n    .scale-instances {\n      display: flex;\n      align-items: center;\n\n      .plus-minus {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n  }\n  .box {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    & h1,\n    h3 {\n      margin-left: 5;\n    }\n    h3 {\n      flex: 1;\n      display: flex;\n    }\n    &-two-cols {\n      display: flex;\n      h1 {\n        font-size: 4.5rem;\n        padding: 0 10px;\n      }\n      div {\n        margin-top: 8px;\n      }\n    }\n    &-timers {\n      display: flex;\n      flex-direction: column;\n      h4 {\n        font-size: 1.6rem;\n      }\n      div {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n      }\n    }\n  }\n}\n\n.stats-table {\n  display: flex;\n  width: 100%;\n\n  table {\n    width: 100%;\n  }\n}\n\n.stats {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 12px 0;\n  position: relative;\n\n  &::before {\n    content: \"\";\n    border-right: 1px solid var(--default);\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 50%;\n    width: 1px;\n  }\n\n  & > div:nth-child(2) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n\n  h3 {\n    font-size: 16px;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 0;\n    padding: 0;\n\n    li {\n      list-style: none;\n      font-size: 14px;\n    }\n  }\n\n  // For the second div in stats, style the ul differently\n  & > div:nth-child(2) ul {\n    align-items: flex-end;\n  }\n\n}\n\n.deployment__details__header {\n  display: flex;\n  align-items: center;\n  h4 {\n    margin: 0\n  }\n  .git-icon {\n    margin: 0 3px 0 -3px;\n    font-size: 25px;\n  }\n}\n\n.deployment__origin__list {\n  ul {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    li {\n      margin: 5px;\n      list-style: none;\n\n      h4 {\n        color: var(--default-text);\n        font-weight: 300;\n        font-size: 14px;\n        margin: 0;\n      }\n    }\n  }\n}\n\n.sortable-table {\n  &-avatar {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    img {\n      width: 30px;\n      height: 30px;\n      border-radius: var(--border-radius);\n      margin-right: 10px;\n    }\n  }\n\n  &-commit {\n    display: flex;\n  }\n}\n\n.redeploy-info {\n  margin: 0;\n}\n</style>\n","import script from \"./applications.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./applications.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./applications.vue?vue&type=style&index=0&id=17c0c8e0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-17c0c8e0\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./applications.vue?vue&type=style&index=0&id=17c0c8e0&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ca4e624c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt-20\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = {\n  key: 1,\n  class: \"text-muted\"\n}\n\nimport { useStore } from 'vuex';\nimport { ref, computed, onMounted } from 'vue';\n\nimport EpinioCatalogServiceModel from '../models/catalogservices';\nimport { EPINIO_PRODUCT_NAME, EPINIO_TYPES } from '../types';\n\nimport ResourceTable from '@shell/components/ResourceTable.vue';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'catalogservices',\n  props: {\n    value: {}\n  },\n  setup(__props: any) {\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst props = __props; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst pending = ref<boolean>(true);\n\nonMounted(async () => {\n  await store.dispatch(`epinio/findAll`, { type: EPINIO_TYPES.SERVICE_INSTANCE });\n  pending.value = false;\n});\n\nconst servicesSchema = computed(() => {\n  return store.getters[`${ EPINIO_PRODUCT_NAME }/schemaFor`](EPINIO_TYPES.SERVICE_INSTANCE);\n});\n\nconst servicesHeaders = computed(() => {\n  return store.getters['type-map/headersFor'](servicesSchema.value);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_LinkDetail = _resolveComponent(\"LinkDetail\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"h2\", _hoisted_1, _toDisplayString(_unref(t)('epinio.catalogService.detail.servicesTitle', { catalogService: _ctx.value.name })), 1),\n    _createVNode(ResourceTable, {\n      schema: servicesSchema.value,\n      rows: _ctx.value.services,\n      loading: pending.value,\n      headers: servicesHeaders.value\n    }, {\n      \"cell:boundApps\": _withCtx(({ row }) => [\n        (row.applications.length)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row.applications, (app, index) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: app.id\n                }, [\n                  _createVNode(_component_LinkDetail, {\n                    row: app,\n                    value: app.meta.name\n                  }, null, 8, [\"row\", \"value\"]),\n                  (index < row.applications.length - 1)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: app.id + 'i'\n                      }, \", \"))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \" \"))\n      ]),\n      _: 1\n    }, 8, [\"schema\", \"rows\", \"loading\", \"headers\"])\n  ]))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { useStore } from 'vuex';\nimport { ref, computed, onMounted } from 'vue';\n\nimport EpinioCatalogServiceModel from '../models/catalogservices';\nimport { EPINIO_PRODUCT_NAME, EPINIO_TYPES } from '../types';\n\nimport ResourceTable from '@shell/components/ResourceTable.vue';\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst props = defineProps<{ value: EpinioCatalogServiceModel }>(); // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst pending = ref<boolean>(true);\n\nonMounted(async () => {\n  await store.dispatch(`epinio/findAll`, { type: EPINIO_TYPES.SERVICE_INSTANCE });\n  pending.value = false;\n});\n\nconst servicesSchema = computed(() => {\n  return store.getters[`${ EPINIO_PRODUCT_NAME }/schemaFor`](EPINIO_TYPES.SERVICE_INSTANCE);\n});\n\nconst servicesHeaders = computed(() => {\n  return store.getters['type-map/headersFor'](servicesSchema.value);\n});\n</script>\n\n<template>\n  <div>\n    <h2 class=\"mt-20\">\n      {{ t('epinio.catalogService.detail.servicesTitle', { catalogService: value.name }) }}\n    </h2>\n    <ResourceTable\n      :schema=\"servicesSchema\"\n      :rows=\"value.services\"\n      :loading=\"pending\"\n      :headers=\"servicesHeaders\"\n    >\n      <template #cell:boundApps=\"{ row }\">\n        <span v-if=\"row.applications.length\">\n          <template v-for=\"(app, index) in row.applications\" :key=\"app.id\">\n            <LinkDetail\n              :row=\"app\"\n              :value=\"app.meta.name\"\n            />\n            <span\n              v-if=\"index < row.applications.length - 1\"\n              :key=\"app.id + 'i'\"\n            >, </span>\n          </template>\n        </span>\n        <span\n          v-else\n          class=\"text-muted\"\n        >&nbsp;</span>\n      </template>\n\n    </ResourceTable>\n  </div>\n</template>\n","import script from \"./catalogservices.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./catalogservices.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".application-card[data-v-60560944]{margin-top:0!important}.repo-info[data-v-60560944]{display:grid;grid-auto-columns:minmax(0,1fr);grid-gap:20px;font-size:14px}.repo-info-owner[data-v-60560944]{display:flex;align-self:center}.repo-info-owner a[data-v-60560944]{font-size:16px!important}.repo-info-owner img[data-v-60560944]{margin-right:8px;align-self:center;width:20px;border-radius:5%}.repo-info-owner span[data-v-60560944]{opacity:.5}.repo-info-description[data-v-60560944],.repo-info-revision[data-v-60560944]{display:flex;align-items:center;align-self:center}.repo-info-description i[data-v-60560944],.repo-info-revision i[data-v-60560944]{opacity:.8}.repo-info-description span[data-v-60560944],.repo-info-revision span[data-v-60560944]{display:flex;align-self:center}.repo-info ul[data-v-60560944],.repo-info-revision[data-v-60560944]{justify-content:space-between}.repo-info ul[data-v-60560944]{margin:0;padding:0;list-style:none;display:flex}.repo-info ul li[data-v-60560944]{font-size:14px;opacity:.5}.repo-info ul li span[data-v-60560944]{color:var(--default-text)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".content[data-v-17c0c8e0]{max-width:1600px}.simple-box-row[data-v-17c0c8e0]{display:grid;grid-auto-columns:minmax(0,1fr);grid-auto-flow:column;grid-gap:10px}@media only screen and (max-width:992px){.simple-box-row[data-v-17c0c8e0]{grid-auto-flow:row}}.simple-box-row .simple-box[data-v-17c0c8e0]{width:100%}.simple-box-row .simple-box ul[data-v-17c0c8e0]{word-break:break-all}.simple-box-row .simple-box[data-v-17c0c8e0]:not(:last-of-type){margin-right:20px}.simple-box-row .simple-box .deployment__origin__row[data-v-17c0c8e0]{display:flex;flex-direction:column}.simple-box-row .simple-box .deployment__origin__row h4[data-v-17c0c8e0]:first-of-type{font-weight:700;margin-bottom:0}.simple-box-row .simple-box .deployment__origin__row h4[data-v-17c0c8e0]:last-of-type{word-break:break-all}.simple-box-row .simple-box .deployment__origin__row:last-of-type h4[data-v-17c0c8e0]:last-of-type{margin-bottom:0}.simple-box-row .simple-box .deployment__origin__row thead tr th[data-v-17c0c8e0]{text-align:left;color:var(--muted);font-weight:300}.simple-box-row .simple-box .scale-instances[data-v-17c0c8e0]{display:flex;align-items:center}.simple-box-row .simple-box .scale-instances .plus-minus[data-v-17c0c8e0]{width:100%;display:flex;align-items:center;justify-content:center}.simple-box-row .box[data-v-17c0c8e0]{display:flex;justify-content:flex-start;align-items:flex-start}.simple-box-row .box h1[data-v-17c0c8e0],.simple-box-row .box h3[data-v-17c0c8e0]{margin-left:5}.simple-box-row .box h3[data-v-17c0c8e0]{flex:1;display:flex}.simple-box-row .box-two-cols[data-v-17c0c8e0]{display:flex}.simple-box-row .box-two-cols h1[data-v-17c0c8e0]{font-size:4.5rem;padding:0 10px}.simple-box-row .box-two-cols div[data-v-17c0c8e0]{margin-top:8px}.simple-box-row .box-timers[data-v-17c0c8e0]{display:flex;flex-direction:column}.simple-box-row .box-timers h4[data-v-17c0c8e0]{font-size:1.6rem}.simple-box-row .box-timers div[data-v-17c0c8e0]{width:100%;display:flex;justify-content:space-between}.stats-table[data-v-17c0c8e0]{display:flex;width:100%}.stats-table table[data-v-17c0c8e0]{width:100%}.stats[data-v-17c0c8e0]{display:grid;grid-template-columns:1fr 1fr;margin:12px 0;position:relative}.stats[data-v-17c0c8e0]:before{content:\\\"\\\";border-right:1px solid var(--default);position:absolute;top:0;bottom:0;left:50%;width:1px}.stats>div[data-v-17c0c8e0]:nth-child(2){display:flex;flex-direction:column;align-items:flex-end}.stats h3[data-v-17c0c8e0]{font-size:16px}.stats ul[data-v-17c0c8e0]{display:flex;flex-direction:column;gap:8px;margin:0;padding:0}.stats ul li[data-v-17c0c8e0]{list-style:none;font-size:14px}.stats>div:nth-child(2) ul[data-v-17c0c8e0]{align-items:flex-end}.deployment__details__header[data-v-17c0c8e0]{display:flex;align-items:center}.deployment__details__header h4[data-v-17c0c8e0]{margin:0}.deployment__details__header .git-icon[data-v-17c0c8e0]{margin:0 3px 0 -3px;font-size:25px}.deployment__origin__list ul[data-v-17c0c8e0]{margin:0;padding:0;display:grid;grid-template-columns:1fr 1fr}.deployment__origin__list ul li[data-v-17c0c8e0]{margin:5px;list-style:none}.deployment__origin__list ul li h4[data-v-17c0c8e0]{color:var(--default-text);font-weight:300;font-size:14px;margin:0}.sortable-table-avatar[data-v-17c0c8e0]{display:flex;align-items:center;justify-content:flex-start}.sortable-table-avatar img[data-v-17c0c8e0]{width:30px;height:30px;border-radius:var(--border-radius);margin-right:10px}.sortable-table-commit[data-v-17c0c8e0]{display:flex}.redeploy-info[data-v-17c0c8e0]{margin:0}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./AppGitDeployment.vue?vue&type=style&index=0&id=60560944&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2adddf68\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["day","relativeTime","props","__props","formatDate","date","from","fromNow","format","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","gitSource","owner","avatarUrl","alt","ref","target","href","htmlUrl","name","_hoisted_4","_hoisted_5","gitDeployment","deployedCommit","_hoisted_6","class","_toDisplayString","short","commitPosition","_hoisted_7","text","description","_hoisted_8","_ctx","t","created_at","updated_at","__exports__","_hoisted_3","key","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_defineComponent","__name","value","initialValue","mode","setup","store","useStore","getters","saving","long","commits","appInstanceSchema","EPINIO_PRODUCT_NAME","EPINIO_TYPES","APP_INSTANCE","servicesSchema","SERVICE_INSTANCE","servicesHeaders","configsSchema","CONFIGURATION","configsHeaders","appInstance","schema","headers","services","filter","h","includes","configs","commitActions","action","label","icon","enabled","async","updateInstances","newInstances","configuration","instances","update","forceFetch","err","console","error","epinioExceptionToErrorsArray","formatURL","str","matchGit","match","fetchRepoDetails","usernameOrOrg","repo","appSource","git","res","dispatch","gitType","username","GitUtils","normalize","fetchCommits","branch","setCommitDetails","commit","selectedCommit","preparedCommits","find","c","commitId","slice","onMounted","type","computed","arr","isArray","map","availableActions","editFromCommit","goToEdit","sha","id","commitsHeaders","width","sort","formatter","defaultSort","sourceIcon","appSourceInfo","length","idx","forEach","ele","i","position","_cache","_directive_tooltip","_resolveDirective","_openBlock","_createVNode","ApplicationCard","cardIcon","_withCtx","_normalizeClass","_Fragment","_renderList","routes","route","state","rel","resourcesCount","envCount","_unref","serviceConfigurations","baseConfigurations","_","deployment","_createCommentVNode","Tabbed","default","Tab","weight","SimpleBox","ConsumptionGauge","capacity","desiredInstances","used","readyInstances","PlusMinus","$event","disabled","onMinus","onPlus","_createTextVNode","instanceMemory","min","max","avg","instanceCpu","_createBlock","kind","APPLICATION_MANIFEST_SOURCE_TYPE","GIT","AppGitDeployment","details","d","startsWith","__","SortableTable","rows","search","paging","Banner","color","row","author","Link","_withDirectives","ResourceTable","namespaced","content","__esModule","module","locals","exports","add","pending","_component_LinkDetail","_resolveComponent","catalogService","loading","applications","app","index","meta","___CSS_LOADER_EXPORT___","push"],"sourceRoot":""}
{"version":3,"file":"epinio-1.12.0-rc3.umd.min.301.js","mappings":"2PA0RQA,MAAM,S,+RAnDZC,EAAAA,EAAAA,aA2DSC,GA3DTC,EAAAA,EAAAA,YA2DSC,EA1DCC,OAAM,CACb,cAAaC,EAAAC,WACbC,UAASC,EAAAC,Y,wBAEV,IAAQ,EAARC,EAAAA,EAAAA,YAAQP,EAAAQ,OAAA,WAGAC,EAAAC,iBAAc,kBADtBb,EAAAA,EAAAA,aAQMc,EAAA,C,MANJ,YAAU,8BACVC,KAAK,aACJC,QAAS,EACT,qBAAoBR,EAAAS,sB,wBAErB,IAA6B,EAA7BC,EAAAA,EAAAA,aAA6BC,EAAA,CAAhBC,MAAOf,EAAAe,OAAK,qB,gEAInBZ,EAAAa,aAAU,kBADlBrB,EAAAA,EAAAA,aAiBMc,EAAA,C,MAfJ,YAAU,0BACVC,KAAK,SACJC,QAAS,G,wBAGV,IASE,CARsB,WAAhBJ,EAAAU,cAAW,kBADnBtB,EAAAA,EAAAA,aASEuB,EAAA,C,MAPCC,OAAQZ,EAAAa,YACR,eAAcjB,EAAAkB,kBACd,aAAYlB,EAAAmB,gBACZ,yCAAuC,EACvCC,QAASpB,EAAAqB,aACTC,kBAAmBlB,EAAAkB,kBACnBC,YAAY,G,wJAKTvB,EAAAwB,cAAW,kBADnBhC,EAAAA,EAAAA,aAsBMc,EAAA,C,MApBJC,KAAK,UACL,YAAU,2BACTC,QAAS,G,wBAEV,IAAwC,uBAAxCiB,EAAAA,EAAAA,oBAAwC,wBAA/B,gCACTf,EAAAA,EAAAA,aAIEgB,EAAA,CAHC,eAAY,CAAG7B,EAAAe,MAAMe,MACrBf,MAAOf,EAAAe,MACRgB,UAAU,Q,uDAGZH,EAAAA,EAAAA,oBAGE,KAHFI,EAGE,cAFK,8BAGPnB,EAAAA,EAAAA,aAIEgB,EAAA,CAHC,eAAY,CAAG7B,EAAAe,MAAMe,MACrBf,MAAOf,EAAAe,MACRgB,UAAU,M,mKC1RlB,GAAeE,EAAAA,EAAAA,iBAAgB,IAC1BC,EAAAA,EAEHC,MAAO,CACLC,KAAM,CACJN,KAASO,OACTC,QAASC,EAAAA,IAGXC,SAAU,CACRV,KAASO,OACTC,QAASC,EAAAA,IAGXE,GAAI,CACFX,KAASO,OACTC,QAASI,EAAAA,IAIX3B,MAAO,CACLe,KAAUa,OACVC,UAAU,GAIZC,aAAc,CACZf,KAASa,OACTL,QAAS,MAIXQ,UAAW,CACThB,KAASa,OACTL,QAAS,MAGXS,UAAW,CACTjB,KAASkB,QACTV,SAAS,M,iGC+Bb3C,EAAAA,EAAAA,aAgBgBsD,EAAA,CAfb1B,QAASpB,EAAAoB,QACT2B,KAAM/C,EAAA+C,KACP,YAAU,YACV,kBAAgB,YACf,iBAAe,EACf,eAAa,EACbC,QAAQ,G,CAEE,kBAAcC,EAAAA,EAAAA,UACvB,EAD0BC,SAAG,EAC7BzB,EAAAA,EAAAA,oBAAmE,QAA5DlC,OAAK4D,EAAAA,EAAAA,gBAAA,cAAiBD,EAAIE,U,qBAAWF,EAAIG,WAAS,MAGhD,eAAWJ,EAAAA,EAAAA,UACpB,EADuBC,SAAG,EAC1BzB,EAAAA,EAAAA,oBAAgE,QAAzDlC,OAAK4D,EAAAA,EAAAA,gBAAA,cAAiBD,EAAIE,U,qBAAWF,EAAII,QAAM,M,yCAtF5D,GACEC,WAAY,CAAEC,cAAaA,EAAAA,GAC3BxB,MAAY,CACVpB,MAAO,CACLe,KAASa,OACTL,QAASA,KACA,CAAC,KAKdsB,SAAU,CACRrC,OAAAA,GACE,MAAO,CACL,CACEb,KAAa,YACbmD,SAAa,yBACb9C,MAAa,YACb+C,MAAa,IACbC,KAAa,YACbC,aAAa,GAEf,CACEtD,KAAa,SACbmD,SAAa,sBACb9C,MAAa,SACb+C,MAAa,GACbC,KAAa,SACbC,aAAa,GAEf,CACEtD,KAAe,OACfmD,SAAe,uBACf9C,MAAe,OACfgD,KAAe,OACfE,UAAe,WACfC,cAAe,CAAEC,WAAW,GAC5BL,MAAe,IACfE,aAAe,GAEjB,CACEtD,KAAa,UACbmD,SAAa,uBACb9C,MAAa,UACbgD,KAAa,CAAC,WACdC,aAAa,GAGnB,EAEAd,IAAAA,GACE,OAAQkB,KAAKrD,MAAM0C,QAAQY,YAAc,IAAIC,KAAKC,IAChD,IAAIC,EAAUD,EAAKC,SAAW,GAM9B,OAJKD,EAAKE,SACRD,EAAU,IAAKD,EAAKE,WAAaD,IAAWE,QAGvC,CACLlB,UAAWe,EAAKzC,MAAQ,UACxB2B,OAAWc,EAAKd,QAAU,UAC1BF,MAAWgB,EAAKhB,MAChBoB,KAAWJ,EAAKK,eAAiBL,EAAKM,gBAAkBN,EAAKO,mBAC7DN,aAGN,I,WChEJ,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,WCLM,SAAUC,EAAOlF,EAAUmF,EAAYjF,EAAYkF,EAAY3E,EAAWJ,GAC9E,MAAMgF,GAA2BC,EAAAA,EAAAA,kBAAkB,iBAEnD,OAAQC,EAAAA,EAAAA,cCkGRC,EAAAA,EAAAA,oBA4BM,aA3BJzE,EAAAA,EAAAA,aA0BgBsE,GA1BhBtF,EAAAA,EAAAA,YA0BgBC,EAAAC,OAzBA,CACboB,OAAQrB,EAAAqB,OACR+B,KAAMpD,EAAAoD,KACN,cAAapD,EAAAyF,cAAgBzF,EAAA0F,YAC7BC,QAAS3F,EAAA2F,QACTC,UAAW5F,EAAA4F,UAEXnE,QAASzB,EAAA6F,YACTjE,WAAY5B,EAAA4B,WAEZ,8BAA6B5B,EAAAyF,YAC7B,6BAA4BzF,EAAA8F,iBAC5BC,oBAAoB/F,EAAAgG,qBDpGnBC,EAAAA,EAAAA,aAAa,CAAEC,EAAG,GAAK,EACzBC,EAAAA,EAAAA,YCuGsBnG,EAAAQ,QAAM,CAAlB0F,EAAGE,KDtGJ,CACLxF,KCsGKwF,EDrGLC,IAAI/C,EAAAA,EAAAA,UC2GJgD,GANkB,EAGpB/F,EAAAA,EAAAA,YAGEP,EAAAQ,OAFO4F,GAAIG,EAAAA,EAAAA,iBAAAC,EAAAA,EAAAA,oBACHF,cDrGV,KAAM,CAAC,SAAU,OAAQ,cAAe,UAAW,YAAa,UAAW,aAAc,8BAA+B,6BAA8B,yBAE9J,C,0BCbA,GAAenE,EAAAA,EAAAA,iBAAgB,CAC7BvB,KAAM,yBAENgD,WAAY,CAAE6C,cAAaA,EAAAA,GAE3BC,OAAQ,CAACC,EAAAA,GAETtE,MAAO,CACLhB,OAAQ,CACNW,KAAUa,OACVC,UAAU,GAGZrB,QAAS,CACPO,KAAS4E,MACTpE,QAAS,MAGXb,kBAAmB,CACjBK,KAAS4E,MACTpE,QAAS,MAGXoD,UAAW,CACT5D,KAASkB,QACTV,QAAS,MAGXZ,WAAY,CACVI,KAASkB,QACTV,QAAS,MAUXqE,wBAAyB,CACvB7E,KAAS8E,SACTtE,QAAS,MAYXuE,4BAA6B,CAC3B/E,KAAS8E,SACTtE,QAAS,OAIbwE,IAAAA,GACE,MAAO,CAAEC,SAAU3C,KAAKjD,OAAO6F,GACjC,EAEA,WAAMC,GACJ,MAAMC,EAAW,CACf9C,KAAK+C,WAAW/C,KAAK2C,SAAU,GAAI3C,KAAKgD,UAGtChD,KAAKuC,yBACPO,EAASG,KAAKjD,KAAKuC,wBAAwB,CAAEpB,YAAanB,KAAKmB,qBAG3D+B,QAAQC,IAAIL,EACpB,EAEAtD,SAAU,CACR+B,WAAAA,GACE,MAAM6B,EAAuBpD,KAAKmB,YAAcnB,KAAK3C,kBAAoB2C,KAAK7C,QAE9E,OAAOiG,GAAiBpD,KAAKqD,OAAOC,QAAQ,uBAAuBtD,KAAKjD,OAAQiD,KAAKmB,YACvF,KC3FJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,wIC6JE5F,EAAAA,EAAAA,aAqBgBwF,EAAA,CApBbhE,OAAQ,KACR+B,KAAM/C,EAAA+C,KACN3B,QAASpB,EAAAoB,QACT4B,QAAQ,EACR,iBAAe,EACfzB,YAAY,EACZ,0BAAyBvB,EAAAwH,iBAC1B,eAAa,+BACZjC,WAAW,G,CAED,cAAUtC,EAAAA,EAAAA,UAqBoB,EArBjBC,SAAG,CAEjBA,EAAIuE,OAAI,kBADhBjI,EAAAA,EAAAA,aAGEkI,EAAA,C,MADC9G,MAAOsC,EAAIuE,M,uCAEdjI,EAAAA,EAAAA,aAGEkI,EAAA,C,MADC9G,MAAOsC,G,qIA9KhB,GACEK,WAAY,CAAE6C,cAAa,IAAEuB,WAAUA,EAAAA,GAEvC3F,MAAO,CACLpB,MAAO,CACLe,KAAUa,OACVC,UAAU,GAGZmF,IAAK,CACHjG,KAASO,OACTC,QAAS,MAGXP,UAAW,CACTD,KAASO,OACTC,QAAS,MAGX0F,YAAa,CACXlG,KAAS4E,MACTpE,QAASA,IAAM,KAInBwE,IAAAA,GACE,MAAO,CAAEmB,gBAAiB,EAC5B,EAEArE,SAAU,CACRsE,qBAAAA,GACE,IAAIX,EAAMnD,KAAKrD,OAAOoH,UAAUC,eAAiB,GAmBjD,OAdAb,EAAMA,EAAIc,QAAQC,IAChB,MAAMxG,EAAOwG,EAAa,GAAIlE,KAAKrC,iBAEnC,SAAKD,GAAQsC,KAAK4D,YAAYO,SAASzG,OAInCsC,KAAK2D,KAAOO,EAAaP,MAAQ3D,KAAK2D,QAOrCR,CACT,EAEArE,IAAAA,GACE,GAAKkB,KAAK6D,gBAAkB,EAE1B,OAGF,MAAMO,EAAUpE,KAAKqD,OAAOC,QAAQ,aAC9BN,EAAUhD,KAAKqD,OAAOC,QAAQ,kBAC9Be,EAAM,GAEZ,IAAM,MAAMC,KAAKtE,KAAK8D,sBAAuB,CAC3C,MAAMS,EAAQD,EAAEC,OAAS,SACnBC,GAAaC,EAAAA,EAAAA,IAAcF,EAAOD,EAAEnF,MAAOmF,EAAEI,eAC7ChH,EAAO4G,EAAE,GAAItE,KAAKrC,iBAClBZ,EAASiD,KAAKqD,OAAOC,QAAQ,GAAIN,eAAsBtF,GAE7D,IAAIpB,EAAOgI,EAAE,GAAItE,KAAKrC,eAGtB,IAAMrB,EACJ,SAGF,IAAIqI,EAAY,KAChB,MAAMC,EAAMtI,EAAKuI,QAAQ,KACnBC,EAAM,GAAIpH,KAAUiH,KAAerI,IAEpCsI,EAAM,IACTD,EAAYrI,EAAKyI,OAAO,EAAGH,GAC3BtI,EAAOA,EAAKyI,OAAOH,EAAM,IAG3B,MAAMI,EAAiB,CACrB1I,KAAQ,6BAA8BqI,EAAY,aAAe,QACjEM,OAAQ,CACNC,QAAUC,EAAAA,EACVf,QAAsB,eAAZpB,EAA2B,QAAUoB,EAC/CzB,SAAUjF,EACViH,YACA/B,GAAUtG,IAId+H,EAAIpB,KAAK,CACPvF,OACA8F,KAAUxD,KAAKqD,OAAOC,QAAQ,GAAIN,UAAiBtF,EAAM4G,EAAE,GAAItE,KAAKrC,gBACpEiF,GAAU0B,EAAE,GAAItE,KAAKrC,eACrB4G,QACAR,SAAU,CAAEY,YAAWrI,QACvB8I,KAAUN,EAEVxI,OACAqI,YACAU,YAAa/I,EACbgJ,UAAaC,EAAAA,EAAAA,IAAsBjJ,GAAMkJ,cAEzChB,aACAQ,iBACAS,YAAiBzF,KAAKqD,OAAOC,QAAQ,qBAAqBvG,GAC1D2I,cAAiBA,EAAAA,EAAAA,IAAanB,GAC9BoB,gBAAiBnB,EAAWoB,QAAQ,QAAS,OAC7CC,aAAiBlB,GAErB,CAEA,OAAON,CACT,EAEAlH,OAAAA,GACE,MAAO,CACL2I,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GAEJ,GAGFC,QAAS,CACP,sBAAM3C,CAAiBzE,GACrB,MAAMkE,EAAUhD,KAAKqD,OAAOC,QAAQ,kBAE9B6C,QAAYjD,QAAQkD,WAAWtH,EAAKoB,KAAKjB,GACtCe,KAAKqD,OAAOgD,SAAS,GAAIrD,SAAiB,CAAEtF,KAAMuB,EAAIvB,KAAMkF,GAAI3D,EAAI2D,QAGvEyB,EAAM,GAEZ,IAAM,IAAIiC,EAAI,EAAIA,EAAIH,EAAII,OAASD,IACV,cAAlBH,EAAIG,GAAGjH,QACVgF,EAAIpB,KAAKkD,EAAIG,GAAG3J,OAMpB,OAFAqD,KAAK6D,kBAEEQ,CACT,ICzJJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,iCRYA,GAEE/H,KAAM,eAENgD,WAAY,CACVkH,OAAM,IACNC,IAAG,IACHC,WAAU,EACVC,uBAAsB,EACtBC,iBAAgBA,GAGlBxE,OAAQ,CAACyE,GAET9I,MAAO,CAELpB,MAAO,CACLe,KAASa,OACTL,QAASA,KACA,CAAC,IAIZF,KAAM,CACJN,KAASO,OACTC,QAAS4I,EAAAA,IAGXjL,WAAY,CACV6B,KAASO,OACTC,QAAS,MAGX6I,eAAgB,CACdrJ,KAASkB,QACTV,SAAS,GAGX8I,WAAY,CACVtJ,KAASkB,QACTV,SAAS,GAGX+I,YAAa,CACXvJ,KAASkB,QACTV,SAAS,GAGXgJ,gBAAiB,CACfxJ,KAASa,OACTL,QAAS,OAIbwE,IAAAA,GACE,MAAMM,EAAUhD,KAAKqD,OAAOC,QAAQ,gBAAgB6D,EAAAA,IAC9CnK,EAAcgD,KAAKqD,OAAOC,QAAQ,GAAIN,eAAsBmE,EAAAA,IAE5D9J,EAAoBL,EAAc,CACtCoK,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IACAC,EAAAA,EAAAA,IAA0B,YAAavK,EAAagD,KAAKqD,OAAOC,SAAS,IACzEiE,EAAAA,EAAAA,IAA0B,SAAUvK,EAAagD,KAAKqD,OAAOC,SAAS,GACtEkE,EAAAA,IACAD,EAAAA,EAAAA,IAA0B,aAAcvK,EAAagD,KAAKqD,OAAOC,SAAS,IAC1EiE,EAAAA,EAAAA,IAA0B,QAASvK,EAAagD,KAAKqD,OAAOC,SAAS,GACrEmE,EAAAA,IACE,GAEJ,MAAO,CACLzK,cACAmK,MAAK,KACLtK,YAAgBmD,KAAKnE,WACrBmH,UACA5G,gBAAgB,EAChBiB,oBAEJ,EAEAqK,aAAAA,GACE1H,KAAKqD,OAAOgD,SAAS,qBAAsBc,EAAAA,GAC7C,EAEAtE,KAAAA,GAGE7C,KAAK2H,mBACP,EAEAnI,SAAU,CACR5C,UAAAA,GACE,OAAOoD,KAAK4H,QAAU5H,KAAKgH,YAAchH,KAAKhD,WAChD,EACAO,WAAAA,GACE,OAAOyC,KAAK4H,QAAU5H,KAAKiH,WAC7B,EACA7J,YAAAA,GACE,MAAO,CACL,CACEd,KAAO,OACPuL,MAAO7H,KAAK8H,EAAE,qBACdnL,MAAO,YACPgD,KAAO,aAET,CACErD,KAAO,SACPuL,MAAO7H,KAAK8H,EAAE,uBACdnL,MAAO,SACPgD,KAAO,UAET,CACErD,KAAe,OACfuL,MAAe7H,KAAK8H,EAAE,wBACtBnL,MAAe,OACfgD,KAAe,YACfE,UAAe,WACfC,cAAe,CAAEC,WAAW,GAC5BL,MAAe,KAEjB,CACEpD,KAAO,UACPuL,MAAO7H,KAAK8H,EAAE,wBACdnL,MAAO,UACPgD,KAAO,WAGb,EACAnD,oBAAAA,GACE,QAAIwD,KAAK5D,gBACA4D,KAAKrD,MAAM0C,QAAQY,YAAYgE,QAAQ9D,KAAU4H,EAAAA,EAAAA,IAA2B5H,KAAO6H,MAAM7H,GAASA,EAAKhB,OAIlH,GAGF+G,QAAS,CAEPlK,SAAAA,CAAUiM,GACRjI,KAAKnD,YAAcoL,GAAKC,YAC1B,EAWA,uBAAMP,GACA3H,KAAK4H,QAAU5H,KAAK+G,gBAAoB/G,KAAKrD,OAAOe,MAAUsC,KAAKjD,QAAQoL,4BACvEnI,KAAKjD,OAAOoL,sBAElBnI,KAAK5D,eAAiB4D,KAAKqD,OAAOC,QAAQ,GAAItD,KAAKgD,8BAA+BhD,KAAKrD,MAAMe,KAAM,qBAEvG,EAKAT,iBAAAA,CAAkB6B,GAChB,OAAOA,EAAKmF,QAAQmE,GAAUA,EAAMC,gBAAgBC,MAAQtI,KAAKrD,OAAOoH,UAAUuE,KACpF,EAQApL,eAAAA,CAAgBqL,GACTA,EAAWC,UACdD,EAAWC,QAAU,IAGvB,MAAMC,EAAQ,qBAGd,IAAIC,EAAW,KAEf,IAAK,IAAIpC,EAAI,EAAGA,EAAIiC,EAAWC,QAAQjC,OAAQD,IAAK,CAClD,MAAMrC,EAASsE,EAAWC,QAAQlC,GAElC,GAAMrC,EAAO0E,OAAOC,MAAMC,GAAMA,EAAEJ,QAAUA,IAAQ,CAClDC,EAAWzE,EACX,KACF,CACF,CAEA,MAAMzF,EAAWsK,EAAAA,GAAsBC,kBAAkB,CACvDN,QACAO,OAAQ,EACRrM,MAAQqD,KAAKrD,MAAMoH,SAASuE,IAC5BW,QAAQ,IASV,OANMP,EACJnK,OAAO2K,OAAOR,EAAUlK,GAExB+J,EAAWC,QAAQvF,KAAKzE,GAGnB+J,CACT,IS5NJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS3H,KAEpE,O","sources":["webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/form/ResourceTabs/index.vue","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/mixins/create-edit-view/index.js","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/form/Conditions.vue","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/form/Conditions.vue?8f43","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue?6771","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue?9eda","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/RelatedResources.vue","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/RelatedResources.vue?df11","webpack://epinio-1.12.0-rc3/../../node_modules/@rancher/shell/components/form/ResourceTabs/index.vue?3fd5"],"sourcesContent":["<script>\n/*\n    Tab component for resource CRU pages featuring:\n    Labels and Annotation tabs with content filtered by create-edit-view mixin\n*/\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Conditions from '@shell/components/form/Conditions';\nimport { EVENT } from '@shell/config/types';\nimport PaginatedResourceTable from '@shell/components/PaginatedResourceTable.vue';\nimport { _VIEW } from '@shell/config/query-params';\nimport RelatedResources from '@shell/components/RelatedResources';\nimport { isConditionReadyAndWaiting } from '@shell/plugins/dashboard-store/resource-class';\nimport { PaginationParamFilter } from '@shell/types/store/pagination.types';\nimport { MESSAGE, REASON } from '@shell/config/table-headers';\nimport { STEVE_EVENT_LAST_SEEN, STEVE_EVENT_TYPE, STEVE_NAME_COL } from '@shell/config/pagination-table-headers';\nimport { headerFromSchemaColString } from '@shell/store/type-map.utils';\n\nexport default {\n\n  name: 'ResourceTabs',\n\n  components: {\n    Tabbed,\n    Tab,\n    Conditions,\n    PaginatedResourceTable,\n    RelatedResources,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    // resource instance\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    // create-edit-view mode\n    mode: {\n      type:    String,\n      default: _VIEW,\n    },\n\n    defaultTab: {\n      type:    String,\n      default: null,\n    },\n\n    needConditions: {\n      type:    Boolean,\n      default: true\n    },\n\n    needEvents: {\n      type:    Boolean,\n      default: true\n    },\n\n    needRelated: {\n      type:    Boolean,\n      default: true\n    },\n\n    extensionParams: {\n      type:    Object,\n      default: null\n    }\n  },\n\n  data() {\n    const inStore = this.$store.getters['currentStore'](EVENT);\n    const eventSchema = this.$store.getters[`${ inStore }/schemaFor`](EVENT); // @TODO be smarter about which resources actually ever have events\n\n    const paginationHeaders = eventSchema ? [\n      STEVE_EVENT_LAST_SEEN,\n      STEVE_EVENT_TYPE,\n      REASON,\n      headerFromSchemaColString('Subobject', eventSchema, this.$store.getters, true),\n      headerFromSchemaColString('Source', eventSchema, this.$store.getters, true),\n      MESSAGE,\n      headerFromSchemaColString('First Seen', eventSchema, this.$store.getters, true),\n      headerFromSchemaColString('Count', eventSchema, this.$store.getters, true),\n      STEVE_NAME_COL,\n    ] : [];\n\n    return {\n      eventSchema,\n      EVENT,\n      selectedTab:    this.defaultTab,\n      inStore,\n      showConditions: false,\n      paginationHeaders\n    };\n  },\n\n  beforeUnmount() {\n    this.$store.dispatch('cluster/forgetType', EVENT);\n  },\n\n  fetch() {\n    // By this stage the `value` should be set. Taking a chance that this is true\n    // The alternative is have an expensive watch on the `value` and trigger there (as well)\n    this.setShowConditions();\n  },\n\n  computed: {\n    showEvents() {\n      return this.isView && this.needEvents && this.eventSchema;\n    },\n    showRelated() {\n      return this.isView && this.needRelated;\n    },\n    eventHeaders() {\n      return [\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'eventType',\n          sort:  'eventType',\n        },\n        {\n          name:  'reason',\n          label: this.t('tableHeaders.reason'),\n          value: 'reason',\n          sort:  'reason',\n        },\n        {\n          name:          'date',\n          label:         this.t('tableHeaders.updated'),\n          value:         'date',\n          sort:          'date:desc',\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          width:         125\n        },\n        {\n          name:  'message',\n          label: this.t('tableHeaders.message'),\n          value: 'message',\n          sort:  'message',\n        },\n      ];\n    },\n    conditionsHaveIssues() {\n      if (this.showConditions) {\n        return this.value.status?.conditions?.filter((cond) => !isConditionReadyAndWaiting(cond)).some((cond) => cond.error);\n      }\n\n      return false;\n    }\n  },\n\n  methods: {\n    // Ensures we only fetch events and show the table when the events tab has been activated\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    /**\n    * Conditions come from a resource's `status`. They are used by both core resources like workloads as well as those from CRDs\n    * - Workloads\n    * - Nodes\n    * - Fleet git repo\n    * - Cluster (provisioning)\n    *\n    * Check here if the resource type contains conditions via the schema resourceFields\n    */\n    async setShowConditions() {\n      if (this.isView && this.needConditions && !!this.value?.type && !!this.schema?.fetchResourceFields) {\n        await this.schema.fetchResourceFields();\n\n        this.showConditions = this.$store.getters[`${ this.inStore }/pathExistsInSchema`](this.value.type, 'status.conditions');\n      }\n    },\n\n    /**\n     * Filter out hidden repos from list of all repos\n     */\n    filterEventsLocal(rows) {\n      return rows.filter((event) => event.involvedObject?.uid === this.value?.metadata?.uid);\n    },\n\n    /**\n     * Filter out hidden repos via api\n     *\n     * pagination: PaginationArgs\n     * returns: PaginationArgs\n     */\n    filterEventsApi(pagination) {\n      if (!pagination.filters) {\n        pagination.filters = [];\n      }\n\n      const field = `involvedObject.uid`; // Pending API Support - https://github.com/rancher/rancher/issues/48603\n\n      // of type PaginationParamFilter\n      let existing = null;\n\n      for (let i = 0; i < pagination.filters.length; i++) {\n        const filter = pagination.filters[i];\n\n        if (!!filter.fields.find((f) => f.field === field)) {\n          existing = filter;\n          break;\n        }\n      }\n\n      const required = PaginationParamFilter.createSingleField({\n        field,\n        exact:  true,\n        value:  this.value.metadata.uid,\n        equals: true\n      });\n\n      if (!!existing) {\n        Object.assign(existing, required);\n      } else {\n        pagination.filters.push(required);\n      }\n\n      return pagination;\n    }\n  }\n};\n</script>\n\n<template>\n  <Tabbed\n    v-bind=\"$attrs\"\n    :default-tab=\"defaultTab\"\n    @changed=\"tabChange\"\n  >\n    <slot />\n\n    <Tab\n      v-if=\"showConditions\"\n      label-key=\"resourceTabs.conditions.tab\"\n      name=\"conditions\"\n      :weight=\"-1\"\n      :display-alert-icon=\"conditionsHaveIssues\"\n    >\n      <Conditions :value=\"value\" />\n    </Tab>\n\n    <Tab\n      v-if=\"showEvents\"\n      label-key=\"resourceTabs.events.tab\"\n      name=\"events\"\n      :weight=\"-2\"\n    >\n      <!-- namespaced: false given we don't want the default handling of namespaced resource (apply header filter)  -->\n      <PaginatedResourceTable\n        v-if=\"selectedTab === 'events'\"\n        :schema=\"eventSchema\"\n        :local-filter=\"filterEventsLocal\"\n        :api-filter=\"filterEventsApi\"\n        :use-query-params-for-simple-filtering=\"false\"\n        :headers=\"eventHeaders\"\n        :paginationHeaders=\"paginationHeaders\"\n        :namespaced=\"false\"\n      />\n    </Tab>\n\n    <Tab\n      v-if=\"showRelated\"\n      name=\"related\"\n      label-key=\"resourceTabs.related.tab\"\n      :weight=\"-3\"\n    >\n      <h3 v-t=\"'resourceTabs.related.from'\" />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"from\"\n      />\n\n      <h3\n        v-t=\"'resourceTabs.related.to'\"\n        class=\"mt-20\"\n      />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"to\"\n      />\n    </Tab>\n  </Tabbed>\n</template>\n","import { _EDIT, _YAML } from '@shell/config/query-params';\nimport { defineComponent } from 'vue';\n\nimport impl from './impl';\n\nexport default defineComponent({\n  ...impl,\n\n  props: {\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    realMode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    as: {\n      type:    String,\n      default: _YAML,\n    },\n\n    // The model to be manipulated by the form\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    // A clone of the model before it's been changed, for conflict resolution\n    initialValue: {\n      type:    Object,\n      default: null,\n    },\n\n    // The 'live' equivalent of this model in the store\n    liveValue: {\n      type:    Object,\n      default: null,\n    },\n\n    doneEvent: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n});\n","<script>\nimport SortableTable from '@shell/components/SortableTable';\n\nexport default {\n  components: { SortableTable },\n  props:      {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  computed: {\n    headers() {\n      return [\n        {\n          name:        'condition',\n          labelKey:    'tableHeaders.condition',\n          value:       'condition',\n          width:       150,\n          sort:        'condition',\n          dashIfEmpty: true,\n        },\n        {\n          name:        'status',\n          labelKey:    'tableHeaders.status',\n          value:       'status',\n          width:       75,\n          sort:        'status',\n          dashIfEmpty: true,\n        },\n        {\n          name:          'time',\n          labelKey:      'tableHeaders.updated',\n          value:         'time',\n          sort:          'time',\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          width:         125,\n          dashIfEmpty:   true,\n        },\n        {\n          name:        'message',\n          labelKey:    'tableHeaders.message',\n          value:       'message',\n          sort:        ['message'],\n          dashIfEmpty: true,\n        },\n      ];\n    },\n\n    rows() {\n      return (this.value.status?.conditions || []).map((cond) => {\n        let message = cond.message || '';\n\n        if ( cond.reason ) {\n          message = `[${ cond.reason }] ${ message }`.trim();\n        }\n\n        return {\n          condition: cond.type || 'Unknown',\n          status:    cond.status || 'Unknown',\n          error:     cond.error,\n          time:      cond.lastProbeTime || cond.lastUpdateTime || cond.lastTransitionTime,\n          message,\n        };\n      });\n    },\n  }\n};\n</script>\n\n<template>\n  <SortableTable\n    :headers=\"headers\"\n    :rows=\"rows\"\n    key-field=\"condition\"\n    default-sort-by=\"condition\"\n    :table-actions=\"false\"\n    :row-actions=\"false\"\n    :search=\"false\"\n  >\n    <template #cell:condition=\"{row}\">\n      <span :class=\"{'text-error': row.error}\">{{ row.condition }}</span>\n    </template>\n\n    <template #cell:status=\"{row}\">\n      <span :class=\"{'text-error': row.error}\">{{ row.status }}</span>\n    </template>\n  </SortableTable>\n</template>\n","import { render } from \"./Conditions.vue?vue&type=template&id=14e4eb96\"\nimport script from \"./Conditions.vue?vue&type=script&lang=js\"\nexport * from \"./Conditions.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ResourceTable = _resolveComponent(\"ResourceTable\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_ResourceTable, _mergeProps(_ctx.$attrs, {\n      schema: _ctx.schema,\n      rows: _ctx.rows,\n      \"alt-loading\": _ctx.canPaginate && !_ctx.isFirstLoad,\n      loading: _ctx.loading,\n      groupable: _ctx.groupable,\n      headers: _ctx.safeHeaders,\n      namespaced: _ctx.namespaced,\n      \"external-pagination-enabled\": _ctx.canPaginate,\n      \"external-pagination-result\": _ctx.paginationResult,\n      onPaginationChanged: _ctx.paginationChanged\n    }), _createSlots({ _: 2 }, [\n      _renderList(_ctx.$slots, (_, slot) => {\n        return {\n          name: slot,\n          fn: _withCtx((scope) => [\n            _renderSlot(_ctx.$slots, slot, _normalizeProps(_guardReactiveProps(scope)))\n          ])\n        }\n      })\n    ]), 1040, [\"schema\", \"rows\", \"alt-loading\", \"loading\", \"groupable\", \"headers\", \"namespaced\", \"external-pagination-enabled\", \"external-pagination-result\", \"onPaginationChanged\"])\n  ]))\n}","<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport ResourceTable from '@shell/components/ResourceTable.vue';\n\n/**\n * This is meant to enable ResourceList like capabilities outside of List pages / components\n *\n * Specifically\n * - Resource Fetch features, including server-side pagination\n * - Some plumbing\n *\n * This avoids polluting the owning component with mixins\n *\n */\nexport default defineComponent({\n  name: 'PaginatedResourceTable',\n\n  components: { ResourceTable },\n\n  mixins: [ResourceFetch],\n\n  props: {\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    headers: {\n      type:    Array,\n      default: null,\n    },\n\n    paginationHeaders: {\n      type:    Array,\n      default: null,\n    },\n\n    groupable: {\n      type:    Boolean,\n      default: null, // Null: auto based on namespaced and type custom groupings\n    },\n\n    namespaced: {\n      type:    Boolean,\n      default: null, // Automatic from schema\n    },\n\n    /**\n     * Information may be required from resources other than the primary one shown per row\n     *\n     * This will fetch them ALL and will be run in a non-server-side pagination world\n     *\n     * of type PagTableFetchSecondaryResources\n     */\n    fetchSecondaryResources: {\n      type:    Function,\n      default: null,\n    },\n\n    /**\n     * Information may be required from resources other than the primary one shown per row\n     *\n     * This will fetch only those relevant to the current page using server-side pagination based filters\n     *\n     * called from shell/mixins/resource-fetch-api-pagination.js\n     *\n     * of type PagTableFetchPageSecondaryResources\n     */\n    fetchPageSecondaryResources: {\n      type:    Function,\n      default: null,\n    }\n  },\n\n  data() {\n    return { resource: this.schema.id };\n  },\n\n  async fetch() {\n    const promises = [\n      this.$fetchType(this.resource, [], this.inStore),\n    ];\n\n    if (this.fetchSecondaryResources) {\n      promises.push(this.fetchSecondaryResources({ canPaginate: this.canPaginate }));\n    }\n\n    await Promise.all(promises);\n  },\n\n  computed: {\n    safeHeaders(): any[] {\n      const customHeaders: any[] = this.canPaginate ? this.paginationHeaders : this.headers;\n\n      return customHeaders || this.$store.getters['type-map/headersFor'](this.schema, this.canPaginate);\n    }\n  }\n});\n\n</script>\n\n<template>\n  <div>\n    <ResourceTable\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :rows=\"rows\"\n      :alt-loading=\"canPaginate && !isFirstLoad\"\n      :loading=\"loading\"\n      :groupable=\"groupable\"\n\n      :headers=\"safeHeaders\"\n      :namespaced=\"namespaced\"\n\n      :external-pagination-enabled=\"canPaginate\"\n      :external-pagination-result=\"paginationResult\"\n      @pagination-changed=\"paginationChanged\"\n    >\n      <!-- Pass down templates provided by the caller -->\n      <template\n        v-for=\"(_, slot) of $slots\"\n        v-slot:[slot]=\"scope\"\n        :key=\"slot\"\n      >\n        <slot\n          :name=\"slot\"\n          v-bind=\"scope\"\n        />\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n","import { render } from \"./PaginatedResourceTable.vue?vue&type=template&id=3c605941&ts=true\"\nimport script from \"./PaginatedResourceTable.vue?vue&type=script&lang=ts\"\nexport * from \"./PaginatedResourceTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { colorForState, stateDisplay } from '@shell/plugins/dashboard-store/resource-class';\nimport { NAME, NAMESPACE, STATE, TYPE } from '@shell/config/table-headers';\nimport { sortableNumericSuffix } from '@shell/utils/sort';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { BadgeState } from '@components/BadgeState';\n\nexport default {\n  components: { ResourceTable, BadgeState },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    rel: {\n      type:    String,\n      default: null,\n    },\n\n    direction: {\n      type:    String,\n      default: 'to'\n    },\n\n    ignoreTypes: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  data() {\n    return { loadedResources: 1 };\n  },\n\n  computed: {\n    filteredRelationships() {\n      let all = this.value?.metadata?.relationships || [];\n\n      // @TODO probably will need more flexible filtering here for\n      // related resources other than helm app resources...\n\n      all = all.filter((relationship) => {\n        const type = relationship[`${ this.direction }Type`];\n\n        if (!type || this.ignoreTypes.includes(type)) {\n          return false;\n        }\n\n        if (this.rel && relationship.rel !== this.rel) {\n          return false;\n        }\n\n        return true;\n      });\n\n      return all;\n    },\n\n    rows() {\n      if ( this.loadedResources < 1 ) {\n        // This does nothing except force recompute when loaded resources change below\n        return;\n      }\n\n      const cluster = this.$store.getters['clusterId'];\n      const inStore = this.$store.getters['currentStore']();\n      const out = [];\n\n      for ( const r of this.filteredRelationships) {\n        const state = r.state || 'active';\n        const stateColor = colorForState(state, r.error, r.transitioning);\n        const type = r[`${ this.direction }Type`];\n        const schema = this.$store.getters[`${ inStore }/schemaFor`](type);\n\n        let name = r[`${ this.direction }Id`];\n\n        // Skip things like toType/toNamespace+selector for now\n        if ( !name ) {\n          continue;\n        }\n\n        let namespace = null;\n        const idx = name.indexOf('/');\n        const key = `${ type }/${ namespace }/${ name }`;\n\n        if ( idx > 0 ) {\n          namespace = name.substr(0, idx);\n          name = name.substr(idx + 1);\n        }\n\n        const detailLocation = {\n          name:   `c-cluster-product-resource${ namespace ? '-namespace' : '' }-id`,\n          params: {\n            product:  EXPLORER,\n            cluster:  inStore === 'management' ? 'local' : cluster,\n            resource: type,\n            namespace,\n            id:       name,\n          }\n        };\n\n        out.push({\n          type,\n          real:     this.$store.getters[`${ inStore }/byId`](type, r[`${ this.direction }Id`]),\n          id:       r[`${ this.direction }Id`],\n          state,\n          metadata: { namespace, name },\n          _key:     key,\n\n          name,\n          namespace,\n          nameDisplay: name,\n          nameSort:    sortableNumericSuffix(name).toLowerCase(),\n\n          stateColor,\n          detailLocation,\n          typeDisplay:     this.$store.getters['type-map/labelFor'](schema),\n          stateDisplay:    stateDisplay(state),\n          stateBackground: stateColor.replace('text-', 'bg-'),\n          groupByLabel:    namespace,\n        });\n      }\n\n      return out;\n    },\n\n    headers() {\n      return [\n        STATE,\n        TYPE,\n        NAME,\n        NAMESPACE,\n      ];\n    },\n  },\n\n  methods: {\n    async getRealResources(rows) {\n      const inStore = this.$store.getters['currentStore']();\n\n      const res = await Promise.allSettled(rows.map((row) => {\n        return this.$store.dispatch(`${ inStore }/find`, { type: row.type, id: row.id });\n      }));\n\n      const out = [];\n\n      for ( let i = 0 ; i < res.length ; i++ ) {\n        if ( res[i].status === 'fulfilled' ) {\n          out.push(res[i].value);\n        }\n      }\n\n      this.loadedResources++;\n\n      return out;\n    }\n  },\n};\n</script>\n\n<template>\n  <ResourceTable\n    :schema=\"null\"\n    :rows=\"rows\"\n    :headers=\"headers\"\n    :search=\"false\"\n    :table-actions=\"false\"\n    :namespaced=\"true\"\n    :mangle-action-resources=\"getRealResources\"\n    paging-label=\"sortableTable.paging.generic\"\n    :groupable=\"false\"\n  >\n    <template #cell:state=\"{row}\">\n      <BadgeState\n        v-if=\"row.real\"\n        :value=\"row.real\"\n      />\n      <BadgeState\n        v-else\n        :value=\"row\"\n      />\n    </template>\n  </ResourceTable>\n</template>\n","import { render } from \"./RelatedResources.vue?vue&type=template&id=8ef6c89e\"\nimport script from \"./RelatedResources.vue?vue&type=script&lang=js\"\nexport * from \"./RelatedResources.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=e7ca10da\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_Tabbed","_mergeProps","_ctx","$attrs","$props","defaultTab","onChanged","$options","tabChange","_renderSlot","$slots","$data","showConditions","_component_Tab","name","weight","conditionsHaveIssues","_createVNode","_component_Conditions","value","showEvents","selectedTab","_component_PaginatedResourceTable","schema","eventSchema","filterEventsLocal","filterEventsApi","headers","eventHeaders","paginationHeaders","namespaced","showRelated","_createElementVNode","_component_RelatedResources","type","direction","_hoisted_1","defineComponent","impl","props","mode","String","default","_EDIT","realMode","as","_YAML","Object","required","initialValue","liveValue","doneEvent","Boolean","_component_SortableTable","rows","search","_withCtx","row","_normalizeClass","error","condition","status","components","SortableTable","computed","labelKey","width","sort","dashIfEmpty","formatter","formatterOpts","addSuffix","this","conditions","map","cond","message","reason","trim","time","lastProbeTime","lastUpdateTime","lastTransitionTime","__exports__","render","_cache","$setup","_component_ResourceTable","_resolveComponent","_openBlock","_createElementBlock","canPaginate","isFirstLoad","loading","groupable","safeHeaders","paginationResult","onPaginationChanged","paginationChanged","_createSlots","_","_renderList","slot","fn","scope","_normalizeProps","_guardReactiveProps","ResourceTable","mixins","ResourceFetch","Array","fetchSecondaryResources","Function","fetchPageSecondaryResources","data","resource","id","fetch","promises","$fetchType","inStore","push","Promise","all","customHeaders","$store","getters","getRealResources","real","_component_BadgeState","BadgeState","rel","ignoreTypes","loadedResources","filteredRelationships","metadata","relationships","filter","relationship","includes","cluster","out","r","state","stateColor","colorForState","transitioning","namespace","idx","indexOf","key","substr","detailLocation","params","product","EXPLORER","_key","nameDisplay","nameSort","sortableNumericSuffix","toLowerCase","typeDisplay","stateDisplay","stateBackground","replace","groupByLabel","STATE","TYPE","NAME","NAMESPACE","methods","res","allSettled","dispatch","i","length","Tabbed","Tab","Conditions","PaginatedResourceTable","RelatedResources","CreateEditView","_VIEW","needConditions","needEvents","needRelated","extensionParams","EVENT","STEVE_EVENT_LAST_SEEN","STEVE_EVENT_TYPE","REASON","headerFromSchemaColString","MESSAGE","STEVE_NAME_COL","beforeUnmount","setShowConditions","isView","label","t","isConditionReadyAndWaiting","some","neu","selectedName","fetchResourceFields","event","involvedObject","uid","pagination","filters","field","existing","fields","find","f","PaginationParamFilter","createSingleField","exact","equals","assign"],"sourceRoot":""}
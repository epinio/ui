{"version":3,"sources":["webpack://epinio-1.11.0-0/./login/epinio.vue","webpack://epinio-1.11.0-0//home/runner/work/ui/ui/dashboard/node_modules/@rancher/shell/mixins/login.js","webpack://epinio-1.11.0-0/login/epinio.vue","webpack://epinio-1.11.0-0/./login/epinio.vue?c7f4","webpack://epinio-1.11.0-0/./login/epinio.vue?340d"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticStyle","attrs","$fetchState","pending","on","login","_v","_s","t","staticRenderFns","props","focusOnMount","type","Boolean","required","name","String","computed","displayName","mounted","focus","methods","$refs","btn","mixins","Login","baseNonce","$store","dispatch","provider","encodedNonce","res","url","redirectAsUrl","URL","redirectUrl","pkceCodeVerifier","searchParams","get","scopes","delete","redirectOpts","toString","split","scopesJoinChar","nonce","persistNonce","data","component"],"mappings":"sMAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,SAAS,CAACG,IAAI,MAAMD,YAAY,iBAAiBE,YAAY,CAAC,YAAY,QAAQC,MAAM,CAAC,SAAWP,EAAIQ,YAAYC,SAASC,GAAG,CAAC,MAAQV,EAAIW,QAAQ,CAACX,EAAIY,GAAG,IAAIZ,EAAIa,GAAGb,EAAIc,EAAE,0BAA0B,UAEhTC,EAAkB,GCFP,GACbC,MAAO,CACLC,aAAc,CACZC,KAAUC,QACVC,UAAU,GAGZC,KAAM,CACJH,KAAUI,OACVF,UAAU,IAIdG,SAAU,CACRC,cACE,OAAOvB,KAAKa,EAAG,6BAA6Bb,KAAKoB,QAIrDI,UACOxB,KAAKgB,cACRhB,KAAKyB,SAITC,QAAS,CACPD,QACEzB,KAAK2B,MAAMC,IAAIH,WCxBN,GACfI,OAAA,CAAAC,GAEA,cAMA,MAAAC,QAAA,KAAAC,OAAAC,SAAA,oBAAAC,SAAA,WACAC,QAAA,KAAAH,OAAAC,SAAA,mBAAAF,GACAK,QAAA,KAAAJ,OAAAC,SAAA,sBAAAI,IAAA,0BAAAF,IAEAG,EAAA,IAAAC,IAAAH,EAAAI,aAEAC,EAAAH,EAAAI,aAAAC,IAAA,iBAGAC,EAAAN,EAAAI,aAAAC,IAAA,SAGAL,EAAAI,aAAAG,OAAA,SAEA,KAAAC,aAAA,CACAZ,SAAA,KAAAd,KACAoB,YAAAF,EAAAS,WAEAH,SAAAI,MAAA,KACAC,eAAA,IAEAC,MAAAnB,EACAoB,aAAA,IACApB,EACAU,sBAKAW,OACA,OAAAN,aAAA,KAGApB,QAAA,CACAhB,QACA,KAAAsB,OAAAC,SAAA,uBAAAa,iBC/C6X,I,YCOzXO,EAAY,eACd,EACAvD,EACAgB,GACA,EACA,KACA,KACA,MAIa,aAAAuC,E","file":"epinio-1.11.0-0.umd.min.login.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"text-center\"},[_c('button',{ref:\"btn\",staticClass:\"btn bg-primary\",staticStyle:{\"font-size\":\"18px\"},attrs:{\"disabled\":_vm.$fetchState.pending},on:{\"click\":_vm.login}},[_vm._v(\" \"+_vm._s(_vm.t('login.genericProvider'))+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\n  props: {\n    focusOnMount: {\n      type:     Boolean,\n      required: true,\n    },\n\n    name: {\n      type:     String,\n      required: true\n    }\n  },\n\n  computed: {\n    displayName() {\n      return this.t(`model.authConfig.provider.${ this.name }`);\n    }\n  },\n\n  mounted() {\n    if ( this.focusOnMount ) {\n      this.focus();\n    }\n  },\n\n  methods: {\n    focus() {\n      this.$refs.btn.focus();\n    },\n  },\n};\n","<script>\nimport Login from '@shell/mixins/login';\n\nexport default {\n  mixins: [Login],\n\n  async fetch() {\n    // Fetch the dex redirec url.\n    // The dashboard would normally get this directly from the auth provider, however epinio/dex implement pkce flow\n    // (additional per request validation). To support this the redirect url is per request and thus generated by the BE per login\n    // Unforunatly this process also requires the state to be known up front, so for this provider we create it upfront and pass through\n    // to the auth store\n    const baseNonce = await this.$store.dispatch('auth/createNonce', { provider: 'epinio' });\n    const encodedNonce = await this.$store.dispatch('auth/encodeNonce', baseNonce);\n    const res = await this.$store.dispatch('management/request', { url: `/dex/redirectUrl?state=${ encodedNonce }` });\n\n    const redirectAsUrl = new URL(res.redirectUrl);\n    // We'll need to save this locally for when we exchange the code for a token\n    const pkceCodeVerifier = redirectAsUrl.searchParams.get('code_verifier');\n\n    // The scopes in the redirect url are pulled out and reapplied, however this does not work for dex (a decoded space separator)\n    const scopes = redirectAsUrl.searchParams.get(`scope`); // This decodes it\n\n    // redirectTo mangles the different scopes together incorrectly, and we're supply our own mangled version anyway, so nuke\n    redirectAsUrl.searchParams.delete('scope');\n\n    this.redirectOpts = {\n      provider:    this.name,\n      redirectUrl: redirectAsUrl.toString(),\n\n      scopes:         scopes.split(' '), // Put it in the format expcted by the `redirectTo` action\n      scopesJoinChar: ' ',\n\n      nonce:        baseNonce,\n      persistNonce: {\n        ...baseNonce,\n        pkceCodeVerifier\n      }\n    };\n  },\n\n  data() {\n    return { redirectOpts: {} };\n  },\n\n  methods: {\n    login() {\n      this.$store.dispatch('auth/redirectTo', this.redirectOpts);\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"text-center\">\n    <button\n      ref=\"btn\"\n      class=\"btn bg-primary\"\n      style=\"font-size: 18px;\"\n      :disabled=\"$fetchState.pending\"\n      @click=\"login\"\n    >\n      {{ t('login.genericProvider') }}\n    </button>\n  </div>\n</template>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./epinio.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./epinio.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./epinio.vue?vue&type=template&id=22ff8624&\"\nimport script from \"./epinio.vue?vue&type=script&lang=js&\"\nexport * from \"./epinio.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
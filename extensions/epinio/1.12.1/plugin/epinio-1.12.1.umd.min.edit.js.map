{"version":3,"file":"epinio-1.12.1.umd.min.edit.js","mappings":"+KAGA,IAAIA,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,GAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,QAE5C,IAAIE,EAAM,WACGA,EAAI,WAAYP,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,G,wFCNxEQ,EAA0B,IAA4B,KAE1DA,EAAwBC,KAAK,CAACN,EAAOC,GAAI,yFAA0F,KAEnI,c,wBCJA,IAAIJ,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,GAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,QAE5C,IAAIE,EAAM,WACGA,EAAI,WAAYP,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,G,gRCN5E,MAAMU,EAAa,CAAEC,MAAO,oBAuB5B,OAA4BC,EAAAA,EAAAA,iBAAiB,CAC3CC,OAAQ,eACRC,MAAO,CACLC,MAAO,CAAC,EACRC,aAAc,CAAC,EACfC,KAAM,CAAC,GAETC,KAAAA,CAAMC,GCZR,MAAML,EAAQK,GAMR,WACJC,EAAU,UACVC,IACEC,EAAAA,EAAAA,wBAAuBR,GAErBS,GAAQC,EAAAA,EAAAA,MAERC,EAAIF,EAAMG,QAAQ,UAElBC,GAAWC,EAAAA,EAAAA,UAA4B,CAAEC,eAAgB,GAAIC,SAAU,KACvEC,GAASC,EAAAA,EAAAA,KAAqBlB,EAAMC,MAAMkB,WAC1CC,GAASF,EAAAA,EAAAA,KAAc,IACvBG,GAAaH,EAAAA,EAAAA,OACbI,GAAYR,EAAAA,EAAAA,UAA+B,CAAES,SAAS,IAEtDC,GAAQV,EAAAA,EAAAA,UAAS,CACrB,CACEW,KAAM,SACNC,MAAOf,EAAE,0CACTgB,QAAShB,EAAE,4CACXiB,OAAO,EACPC,WAAY,CACVC,SAAU,kDACVC,MAAO,gCAGX,CACEN,KAAM,WACNC,MAAOf,EAAE,4CACTgB,QAAShB,EAAE,8CACXiB,OAAO,EACPI,eAAgB,CAAEC,SAAS,MAI3BhB,EAAOhB,MAAMiC,KAAOzB,EAAM0B,QAAQC,aAAaC,OAAOC,OAAOC,SAC/DtB,EAAOhB,MAAMiC,IAAIK,OAAS9B,EAAM0B,QAAQC,aAAaC,OAAOC,MAAMC,SAGpEC,EAAAA,EAAAA,WAAUC,UACR,MAAMC,QAAaC,EAAAA,EAAAA,IAAQ,CACzBC,GAAInC,EAAMoC,SAAS,iBAAkB,CAAEC,KAAMC,EAAAA,GAAaC,YAC1DC,OAAQxC,EAAMoC,SAAS,iBAAkB,CAAEC,KAAMC,EAAAA,GAAaG,aAC9DC,KAAM1C,EAAMoC,SAAS,iBAGvBxB,EAAWpB,MAASyC,EAAuBS,OAG7C,MAAMC,GAAoBC,EAAAA,EAAAA,UACxB,IAAiD,YAA1C5C,EAAM0B,QAAQC,aAAanC,MAAMyC,KAAqB,sBAAwB,IAEjFY,GAAgBD,EAAAA,EAAAA,UAAS,IACtBrD,EAAMG,OAASoD,EAAAA,IAElBC,GAAmBH,EAAAA,EAAAA,UAAS,KAAOI,OAAOC,OAAOpC,GAAWqC,KAAMC,GAAUA,IAE5EC,EAAOA,KACNtD,GAILE,EAAM0B,QAAQ2B,QAAQ,CACpBrC,KAAQlB,EAAUN,MAClB8D,OAAQzD,EAAWL,OAAS,CAAE+D,SAAUhE,EAAMC,MAAM6C,SAKxDL,eAAewB,EAAKC,GAClB9C,EAAOnB,MAAQ,GACf,UACQD,EAAMC,MAAMkE,eAEZnE,EAAMC,MAAMmE,qBAChBpE,EAAME,aAAamE,yBAA2B,GAC9CxD,EAASE,gBAAkB,UAGvBf,EAAMC,MAAMqE,eAChBtE,EAAME,aAAac,UAAY,GAC/BH,EAASG,UAAY,UAGjBhB,EAAMC,MAAMsE,aAClBL,GAAO,GACPL,GACF,CAAE,MAAOW,GACPpD,EAAOnB,OAAQwE,EAAAA,EAAAA,GAA6BD,GAC5CN,GAAO,EACT,CACF,CAEA,SAASQ,EAAIC,EAA0BC,GACrCnB,OAAOoB,QAAQD,GAASE,QAAQ,EAAEC,EAAK9E,MACrC0E,EAAII,GAAO9E,GAEf,CAEA,SAAS+E,EAAWJ,GAClB5E,EAAMC,MAAMgF,KAAOjF,EAAMC,MAAMgF,MAAQ,CAAC,EACxCjF,EAAMC,MAAMiF,cAAgBlF,EAAMC,MAAMiF,eAAiB,CAAC,EAC1DR,EAAI1E,EAAMC,MAAMgF,KAAML,EAAQK,MAC9BP,EAAI1E,EAAMC,MAAMiF,cAAeN,EAAQM,cACzC,CAEA,SAASd,EAAqBQ,GAC5BnB,OAAO0B,OAAOtE,EAAU+D,EAC1B,CAEA,SAASQ,IACP3E,EAAM0B,QAAQ2B,QAAQ9D,EAAMC,MAAMoF,aACpC,CAEA,SAASC,IACP7E,EAAM0B,QAAQ2B,SAAQyB,EAAAA,EAAAA,GAAkB,wBAAyB,CAC/DC,QAAS/E,EAAMG,QAAQ,aACvBoD,SAAUhE,EAAMC,MAAM6C,KACtBxD,GAAI,GAAGU,EAAMC,MAAMgF,KAAKQ,aAAazF,EAAMC,MAAMgF,KAAKxD,SAE1D,CAEA,SAASiE,EAAad,GACpB3D,EAAOhB,MAAQ,CAAC,EAChB,MAAM,SAAE0F,KAAaC,GAAiBhB,EAEtC5E,EAAMC,MAAMiF,cAAgBlF,EAAMC,MAAMiF,eAAiB,CAAC,EAEtDS,GACFjB,EAAI1E,EAAMC,MAAMiF,cAAe,CAAEW,SAAUF,IAG7CjB,EAAIzD,EAAOhB,MAAO2F,EACpB,CAEA,SAASE,EAA6BlB,GACpCF,EAAI1E,EAAMC,MAAMiF,cAAe,CAAEnE,eAAgB6D,GACnD,CAEA,SAASmB,EAAS9F,EAAgB+F,GAC5BA,IACF1E,EAAU0E,IAAQ/F,GAGpBuB,EAAM,GAAGI,MAAQ3B,CACnB,CDYA,MAAO,CAACgG,EAAUC,ICPAD,EAAAhG,QDUXkG,EAAAA,EAAAA,cCTLC,EAAAA,EAAAA,aAoFcC,EAAAA,EAAA,CD1ERtB,IAAK,ECRRlF,OAAKyG,EAAAA,EAAAA,gBAAElD,EAAAnD,OACP,YAAU,EACVE,KAAM8F,EAAA9F,KACN6D,SAAUiC,EAAAhG,MACVmB,OAAQA,EAAAnB,MACR,oBAAmBuD,EAAAvD,MACnBsG,QAAKL,EAAA,KAAAA,EAAA,GAAGM,GAAcpF,EAAAnB,OAASwG,EAAAA,EAAAA,OAAAhC,EAAAA,EAAAgC,CAA6BD,IAC5DE,SAAQzC,GDUJ,CACD7E,SAASuH,EAAAA,EAAAA,SCTb,IAwEe,EAxEfC,EAAAA,EAAAA,aAwEeC,EAAAA,EAAA,CAvEb1G,KAAK,QAAM,CDULf,SAASuH,EAAAA,EAAAA,SCRf,IA0CM,CAzCErD,EAAArD,QDSKkG,EAAAA,EAAAA,cCVbC,EAAAA,EAAAA,aA0CMU,EAAAA,EAAA,CD/BQ/B,IAAK,ECTjB,YAAU,yCACVtD,KAAK,SACJsF,OAAQ,IDWI,CACD3H,SAASuH,EAAAA,EAAAA,SCVrB,IAmCM,EAnCNK,EAAAA,EAAAA,oBAmCM,MAnCNpH,EAmCM,EAlCJgH,EAAAA,EAAAA,aAiCSK,EAAAA,EAAA,CAhCPpH,MAAM,SACL2B,MAAOA,EACP,gBAAciF,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,0CAChB,wBAAsBA,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,4CACzB,cAAY,OACZ,cAAY,OACX,mBAAiB,EACjBS,SAAQ9B,EACRsB,SAAQpB,GDYM,CCVJrE,QAAM0F,EAAAA,EAAAA,SACf,IAUE,CATM1F,EAAAhB,QDWWkG,EAAAA,EAAAA,cCZnBC,EAAAA,EAAAA,aAUEe,EAAAA,EAAA,CDGkBpC,IAAK,ECXtBqC,YAAanB,EAAAhG,MACbgB,OAAQA,EAAAhB,MACRE,KAAM8F,EAAA9F,KACNgD,KAAM9B,EAAApB,MACNoH,SAAQ3B,EACR4B,gBAAetC,EACfuC,kBAAiBzB,EACjB0B,QAAKtB,EAAA,KAAAA,EAAA,GAAAuB,GAAEjG,EAAM,GAAGI,MAAQ6F,IDaN,KAAM,EAAG,CAAC,cAAe,SAAU,OAAQ,WAC9CC,EAAAA,EAAAA,oBAAoB,IAAI,KCXjCC,UAAQhB,EAAAA,EAAAA,SACjB,EADoBiB,UAAI,EACxBhB,EAAAA,EAAAA,aAMEiB,EAAAA,EAAA,CALCT,YAAanB,EAAAhG,MACbgB,OAAQA,EAAAhB,MACRY,SAAUA,EACVV,KAAM8F,EAAA9F,KACNyH,KAAMA,GDcQ,KAAM,EAAG,CAAC,cAAe,SAAU,WAAY,OAAQ,WAE5DE,EAAG,GACF,EAAG,CAAC,QAAS,eAAgB,6BAGpCA,EAAG,MAELJ,EAAAA,EAAAA,oBAAoB,IAAI,ICfpCd,EAAAA,EAAAA,aAYME,EAAAA,EAAA,CAXJ,YAAU,yCACVrF,KAAK,OACJsF,OAAQ,GACRnD,MAAOtC,EAAUC,SDiBT,CACDnC,SAASuH,EAAAA,EAAAA,SChBjB,IAKE,EALFC,EAAAA,EAAAA,aAKEmB,EAAAA,EAAA,CAJCX,YAAanB,EAAAhG,MACbE,KAAM8F,EAAA9F,KACNkH,SAAQrC,EACRwC,QAAKtB,EAAA,KAAAA,EAAA,GAAAuB,GAAE1B,EAAS0B,EAAQ,aDkBd,KAAM,EAAG,CAAC,cAAe,WAE9BK,EAAG,GACF,EAAG,CAAC,WClBflB,EAAAA,EAAAA,aAWME,EAAAA,EAAA,CAVJ,YAAU,iDACVrF,KAAK,iBACJsF,OAAQ,IDoBA,CACD3H,SAASuH,EAAAA,EAAAA,SCnBjB,IAKE,EALFC,EAAAA,EAAAA,aAKEoB,EAAAA,EAAA,CAJCZ,YAAanB,EAAAhG,MACb,sBAAqBgG,EAAA/F,aACrBC,KAAM8F,EAAA9F,KACNkH,SAAQjD,GDqBE,KAAM,EAAG,CAAC,cAAe,sBAAuB,WAErD0D,EAAG,MAGPA,EAAG,MAGPA,EAAG,GACF,EAAG,CAAC,QAAS,OAAQ,WAAY,SAAU,yBAtG7C3B,EAAAA,EAAAA,cCTLC,EAAAA,EAAAA,aAAyB6B,EAAAA,EAAA,CAAAlD,IAAA,IDiH3B,I,+BE3RA,MAAMmD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,wFCNIxI,EAA0B,IAA4B,KAE1DA,EAAwBC,KAAK,CAACN,EAAOC,GAAI,4DAA6D,KAEtG,c,yPCJA,MAAMM,EAAa,CAAEmF,IAAK,GACpBoD,EAAa,CAAEtI,MAAO,OACtBuI,EAAa,CAAEvI,MAAO,cACtBwI,EAAa,CAAExI,MAAO,OACtByI,EAAa,CAAEzI,MAAO,eAqB5B,OAA4BC,EAAAA,EAAAA,iBAAiB,CAC3CC,OAAQ,iBACRC,MAAO,CACLC,MAAO,CAAC,EACRC,aAAc,CAAC,EACfC,KAAM,CAAC,GAETC,KAAAA,CAAMC,GChBR,MAAMI,GAAQC,EAAAA,EAAAA,MACRC,EAAIF,EAAMG,QAAQ,UAElBZ,EAAQK,GAMR,WACJC,EAAU,UACVC,EAAS,aACTgI,EAAY,aACZC,EAAY,OACZC,EAAM,+BACNC,IACElI,EAAAA,EAAAA,wBAAuBR,GAErBoB,GAASF,EAAAA,EAAAA,KAAgB,IACzByH,GAAUzH,EAAAA,EAAAA,MAAa,GACvBsC,GAAmBtC,EAAAA,EAAAA,MAAa,IAEtCsB,EAAAA,EAAAA,WAAUC,UACRzC,EAAMC,MAAMgF,KAAKQ,UAAYzF,EAAME,aAAa+E,KAAKQ,WACnDmD,EAAW3I,MAAM,IAAI4I,SAASpH,KAChCzB,EAAMC,MAAM6I,KAAO,IAAK9I,EAAME,aAAagF,eAAe6D,SAC1DR,EAAatI,MAAQ,IAAID,EAAME,aAAagF,eAAe8D,WAAa,IAExEC,IAEAN,EAAQ1I,OAAQ,IAGlB,MAAMiJ,GAAS7F,EAAAA,EAAAA,UAAS,IACfrD,EAAMG,OAASoD,EAAAA,IAGlBqF,GAAavF,EAAAA,EAAAA,UAAS,KACnB8F,EAAAA,EAAAA,IAAO1I,EAAMG,QAAQ,cAAcmC,EAAAA,GAAaC,WAAY,QAAQ,IAGvEoG,GAAiB/F,EAAAA,EAAAA,UAAS,IACvBuF,EAAW3I,MAAMoJ,IAAKC,GAAuBA,EAAET,SAASpH,OAG3DoC,EAAOA,KACNtD,GAILE,EAAM0B,QAAQ2B,QAAQ,CACpBrC,KAAQlB,EAAUN,MAClB8D,OAAQzD,EAAWL,OAAS,CAAE+D,SAAUhE,EAAMC,MAAM6C,SAIlDmB,EAAOxB,UACXrB,EAAOnB,MAAQ,GAEf,IACOiJ,EAAOjJ,cACJD,EAAMC,MAAMsJ,eACZb,UACAjI,EAAMoC,SACV,iBACA,CAAEC,KAAM9C,EAAMC,MAAM6C,KAAM0G,IAAK,CAAEC,OAAO,MAIxCP,EAAOjJ,cACHD,EAAMC,MAAMkE,eACZuE,UACA1I,EAAMC,MAAMsE,cAGpBL,GAAO,GACPL,GACF,CAAE,MAAOW,GACPkF,EAAQC,IAAInF,GACZpD,EAAOnB,OAAQwE,EAAAA,EAAAA,GAA6BD,GAC5CN,GAAO,EACT,GAGI+E,EAAmBA,KACvB,MAAMW,GAAaC,EAAAA,EAAAA,GACjB7J,EAAMC,OAAOgF,KAAKxD,MAAQ,GAC1Bd,EAAE,yBACFF,EAAMG,aACNkJ,EACA,IAGIC,GAAWF,EAAAA,EAAAA,GACf7J,EAAMC,OAAOgF,KAAKQ,WAAa,GAC/B,GACAhF,EAAMG,aACNkJ,EACA,IAGF,GAA0B,IAAtBF,EAAWI,QAAoC,IAApBD,EAASC,OAAc,CACpD,MAAMC,EAAaxG,OAAOoB,QAAQ7E,EAAMC,OAAO6I,MAAQ,CAAC,GAExD,GAAMmB,EAAWD,OAEf,YADAxG,EAAiBvD,OAAQ,EAG7B,CAEAuD,EAAiBvD,OAAQ,GDwC3B,OCrCAiK,EAAAA,EAAAA,OACE,IAAMlK,EAAMC,MAAMgF,KAAKQ,UACvB,KACE8C,EAAatI,MAAQ,GACrBgJ,OAIJiB,EAAAA,EAAAA,OACE,IAAMlK,EAAMC,MAAMgF,KAAKxD,KACvB,KACEwH,OAIJiB,EAAAA,EAAAA,OACE,IAAMlK,EAAMC,MAAM6I,KAClB,KACEG,KAEF,CAAEkB,MAAM,IDiBH,CAAClE,EAAUC,KCZAD,EAAAhG,OAAS0I,EAAA1I,QDcpBkG,EAAAA,EAAAA,cCdLC,EAAAA,EAAAA,aAAoC6B,EAAAA,EAAA,CAAAlD,IAAA,KAEvBkB,EAAAhG,QDcNkG,EAAAA,EAAAA,cCfPC,EAAAA,EAAAA,aAoEcC,EAAAA,EAAA,CDpDNtB,IAAK,ECdV,aAAY,MACZ5E,KAAM8F,EAAA9F,KACN,cAAYsG,EAAAA,EAAAA,OAAAlG,GACZyD,SAAUiC,EAAAhG,MACV,YAAU,EACVmB,OAAQA,EAAAnB,MACR,oBAAmBuD,EAAAvD,MACpB,gBAAc,iBACbsG,QAAKL,EAAA,KAAAA,EAAA,GAAGM,GAAOpF,EAAAnB,MAASuG,GACxBE,SAAQzC,GDgBF,CACD7E,SAASuH,EAAAA,EAAAA,SCff,IAKS,CAJDV,EAAAhG,MAAMmK,mBDgBDjE,EAAAA,EAAAA,cCjBbC,EAAAA,EAAAA,aAKSiE,EAAAA,EAAA,CDaKtF,IAAK,EChBjBuF,MAAM,QDkBO,CACDlL,SAASuH,EAAAA,EAAAA,SCjBrB,IAA6D,EDkB/C4D,EAAAA,EAAAA,kBAAiBC,EAAAA,EAAAA,kBClB5B/D,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,uDAAD,KDoBQqB,EAAG,MAELJ,EAAAA,EAAAA,oBAAoB,IAAI,GCpBzBtG,EAAAnB,MAAO+J,OAAS,IDsBd7D,EAAAA,EAAAA,cCtBbsE,EAAAA,EAAAA,oBAOM,MAAA7K,EAAA,GDgBSuG,EAAAA,EAAAA,YAAW,ICtBxBsE,EAAAA,EAAAA,oBAKEC,EAAAA,SAAA,MAAAC,EAAAA,EAAAA,YAJmBvJ,EAAAnB,MAAM,CAAjBuE,EAAKoG,MDsBOzE,EAAAA,EAAAA,cCvBtBC,EAAAA,EAAAA,aAKEiE,EAAAA,EAAA,CAHCtF,IAAK6F,EACNN,MAAM,QACL5I,MAAO8C,GDuBO,KAAM,EAAG,CAAC,YACX,UAENkD,EAAAA,EAAAA,oBAAoB,IAAI,ICvBpCd,EAAAA,EAAAA,aAQEiE,EAAAA,EAAA,CAPA,WAAS,OACT,gBAAc,YACb,sBAAqBzB,EAAAnJ,MACrB,6BAA2B,EAC3B,sBAAoB,EACpBA,MAAOgG,EAAAhG,MAAMgF,KACb9E,KAAM8F,EAAA9F,MDyBE,KAAM,EAAG,CAAC,sBAAuB,QAAS,UCvBrD6G,EAAAA,EAAAA,oBAcM,MAdNmB,EAcM,EAbJnB,EAAAA,EAAAA,oBAYM,MAZNoB,EAYM,EAXJxB,EAAAA,EAAAA,aAUEkE,EAAAA,EAAA,CATQ7K,OAAOwG,EAAAA,EAAAA,OAAA8B,GDyBP,iBAAkBrC,EAAO,KAAOA,EAAO,GAAMuB,IAAiBsD,EAAAA,EAAAA,OAAOxC,GCzB9DA,EAAYtI,MAAAwH,EAAA,MAC1BuD,QAASrC,EAAA1I,MACTgL,UAAUxE,EAAAA,EAAAA,OAAAgC,GACVyC,SAASzE,EAAAA,EAAAA,OAAA+B,GACT2C,YAAY,EACZhL,KAAM8F,EAAA9F,KACNiL,UAAU,EACV,YAAW,uCACXC,aAAa5E,EAAAA,EAAAA,OAAAgC,IAAShC,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,wDAAyDA,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,0DD0B3E,KAAM,EAAG,CAAC,QAAS,UAAW,WAAY,UAAW,OAAQ,oBAGpEP,EAAO,KAAOA,EAAO,ICzB7Bc,EAAAA,EAAAA,oBAAsB,OAAjBnH,MAAM,UAAQ,WACnBmH,EAAAA,EAAAA,oBAeM,MAfNqB,EAeM,EAdJrB,EAAAA,EAAAA,oBAaM,MAbNsB,EAaM,EAZJ1B,EAAAA,EAAAA,aAWE0E,EAAAA,EAAA,CAVQrL,MAAOgG,EAAAhG,MAAM6I,KD0Bb,iBAAkB5C,EAAO,KAAOA,EAAO,GAAMuB,GC1BtCxB,EAAAhG,MAAM6I,KAAIrB,GACxB,qBAAmB,EACnBtH,KAAM8F,EAAA9F,KACNoL,OAAO9E,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,qCACT,gBAAcA,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,uCAChB,aAAWA,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,8CACb,eAAaA,EAAAA,EAAAA,OAAA9F,EAAA8F,CAAE,gDACf+E,wBAAwB,EACxB,yBAAuB,EACvB,yBAAuB,GD2Bf,KAAM,EAAG,CAAC,QAAS,OAAQ,QAAS,eAAgB,YAAa,sBAI1E1D,EAAG,EACH2D,GAAI,CAAC,IACJ,EAAG,CAAC,OAAQ,aAAc,WAAY,SAAU,wBACnD/D,EAAAA,EAAAA,oBAAoB,IAAI,EAEhC,I,SE7PA,MAAMQ,EAAc,EAEpB,O,wFCJIxI,EAA0B,IAA4B,KAE1DA,EAAwBC,KAAK,CAACN,EAAOC,GAAI,mTAAoT,KAE7V,c,wBCJA,IAAIJ,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,GAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,QAE5C,IAAIE,EAAM,WACGA,EAAI,WAAYP,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,G","sources":["webpack://epinio-1.12.1/./edit/applications.vue?bb00","webpack://epinio-1.12.1/./edit/configurations.vue?9b54","webpack://epinio-1.12.1/./edit/applications.vue?8912","webpack://epinio-1.12.1/./edit/applications.vue?c495","webpack://epinio-1.12.1/./edit/applications.vue","webpack://epinio-1.12.1/./edit/applications.vue?fa29","webpack://epinio-1.12.1/./edit/applications.vue?2d82","webpack://epinio-1.12.1/./edit/configurations.vue?8948","webpack://epinio-1.12.1/./edit/configurations.vue","webpack://epinio-1.12.1/./edit/configurations.vue?0141","webpack://epinio-1.12.1/./edit/applications.vue?a5ea","webpack://epinio-1.12.1/./edit/configurations.vue?b73d"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./applications.vue?vue&type=style&index=1&id=5e753384&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2f0121c4\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".as-text-area{width:100%!important}.value-container .file-selector{margin-bottom:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./applications.vue?vue&type=style&index=0&id=5e753384&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1d5ac6ec\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"wizard-container\" }\n\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport Application from '../models/applications';\nimport CruResource from '@shell/components/CruResource.vue';\nimport ResourceTabs from '@shell/components/form/ResourceTabs/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport Loading from '@shell/components/Loading.vue';\nimport AppInfo from '../components/application/AppInfo.vue';\nimport AppConfiguration from '../components/application/AppConfiguration.vue';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport { useEpinioBindAppsMixin } from './bind-apps-mixin';\n\nimport Wizard from '@shell/components/Wizard.vue';\nimport { createEpinioRoute } from '../utils/custom-routing';\nimport AppSource from '../components/application/AppSource.vue';\nimport AppProgress from '../components/application/AppProgress.vue';\nimport { EpinioAppSource, EPINIO_TYPES, EpinioAppInfo, EpinioAppBindings } from '../types';\nimport { allHash } from '@shell/utils/promise';\nimport { _EDIT } from '@shell/config/query-params';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'applications',\n  props: {\n    value: {},\n    initialValue: {},\n    mode: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\n\nconst { \n  doneParams,\n  doneRoute,\n} = useEpinioBindAppsMixin(props);\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst bindings = reactive<EpinioAppBindings>({ configurations: [], services: [] });\nconst source = ref<EpinioAppSource>(props.value.appSource);\nconst errors = ref<string[]>([]);\nconst epinioInfo = ref();\nconst tabErrors = reactive<{ appInfo: boolean }>({ appInfo: false });\n\nconst steps = reactive([\n  {\n    name: 'source',\n    label: t('epinio.applications.steps.source.label'),\n    subtext: t('epinio.applications.steps.source.subtext'),\n    ready: false,\n    nextButton: {\n      labelKey: 'epinio.applications.steps.configurations.update',\n      style: 'btn role-primary bg-warning'\n    }\n  },\n  {\n    name: 'progress',\n    label: t('epinio.applications.steps.progress.label'),\n    subtext: t('epinio.applications.steps.progress.subtext'),\n    ready: false,\n    previousButton: { disable: true }\n  },\n]);\n\nif (source.value.git && store.$router.currentRoute._value.query?.commit) {\n  source.value.git.commit = store.$router.currentRoute._value.query.commit as string;\n}\n\nonMounted(async () => {\n  const hash = await allHash({\n    ns: store.dispatch('epinio/findAll', { type: EPINIO_TYPES.NAMESPACE }),\n    charts: store.dispatch('epinio/findAll', { type: EPINIO_TYPES.APP_CHARTS }),\n    info: store.dispatch('epinio/info'),\n  });\n\n  epinioInfo.value = (hash as { info: any }).info;\n});\n\nconst shouldShowButtons = computed(\n  () => (store.$router.currentRoute.value.hash === '#source' ? 'hide-buttons-deploy' : '')\n);\nconst showSourceTab = computed(() => {\n  return props.mode === _EDIT\n});\nconst validationPassed = computed(() => !Object.values(tabErrors).find((error) => error));\n\nconst done = () => {\n  if (!doneRoute) {\n    return;\n  }\n\n  store.$router.replace({\n    name:   doneRoute.value,\n    params: doneParams.value || { resource: props.value.type },\n  });\n}\n\n\nasync function save(saveCb: (success: boolean) => void) {\n  errors.value = [];\n  try {\n    await props.value.update();\n\n    await props.value.updateConfigurations(\n      props.initialValue.baseConfigurationsNames || [],\n      bindings.configurations || [],\n    );\n\n    await props.value.updateServices(\n      props.initialValue.services || [],\n      bindings.services || [],\n    );\n\n    await props.value.forceFetch();\n    saveCb(true);\n    done();\n  } catch (err) {\n    errors.value = epinioExceptionToErrorsArray(err);\n    saveCb(false);\n  }\n}\n\nfunction set(obj: Record<string, any>, changes: Record<string, any>) {\n  Object.entries(changes).forEach(([key, value]) => {\n    obj[key] = value;\n  });\n}\n\nfunction updateInfo(changes: EpinioAppInfo) {\n  props.value.meta = props.value.meta || {};\n  props.value.configuration = props.value.configuration || {};\n  set(props.value.meta, changes.meta);\n  set(props.value.configuration, changes.configuration);\n}\n\nfunction updateConfigurations(changes: EpinioAppBindings) {\n  Object.assign(bindings, changes);\n}\n\nfunction cancel() {\n  store.$router.replace(props.value.listLocation);\n}\n\nfunction finish() {\n  store.$router.replace(createEpinioRoute(`c-cluster-resource-id`, {\n    cluster: store.getters['clusterId'],\n    resource: props.value.type,\n    id: `${props.value.meta.namespace}/${props.value.meta.name}`,\n  }));\n}\n\nfunction updateSource(changes: EpinioAppSource) {\n  source.value = {} as EpinioAppSource;\n  const { appChart, ...cleanChanges } = changes;\n\n  props.value.configuration = props.value.configuration || {};\n\n  if (appChart) {\n    set(props.value.configuration, { appchart: appChart });\n  }\n\n  set(source.value, cleanChanges);\n}\n\nfunction updateManifestConfigurations(changes: string[]) {\n  set(props.value.configuration, { configurations: changes });\n}\n\nfunction validate(value: boolean, tab: string) {\n  if (tab) {\n    tabErrors[tab] = !value;\n  }\n\n  steps[0].ready = value;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (!_ctx.value)\n    ? (_openBlock(), _createBlock(Loading, { key: 0 }))\n    : (_openBlock(), _createBlock(CruResource, {\n        key: 1,\n        class: _normalizeClass(shouldShowButtons.value),\n        \"can-yaml\": false,\n        mode: _ctx.mode,\n        resource: _ctx.value,\n        errors: errors.value,\n        \"validation-passed\": validationPassed.value,\n        onError: _cache[2] || (_cache[2] = (e) => errors.value = _unref(epinioExceptionToErrorsArray)(e)),\n        onFinish: save\n      }, {\n        default: _withCtx(() => [\n          _createVNode(ResourceTabs, { mode: \"mode\" }, {\n            default: _withCtx(() => [\n              (showSourceTab.value)\n                ? (_openBlock(), _createBlock(Tab, {\n                    key: 0,\n                    \"label-key\": \"epinio.applications.steps.source.label\",\n                    name: \"source\",\n                    weight: 30\n                  }, {\n                    default: _withCtx(() => [\n                      _createElementVNode(\"div\", _hoisted_1, [\n                        _createVNode(Wizard, {\n                          class: \"wizard\",\n                          steps: steps,\n                          \"banner-title\": _unref(t)('epinio.applications.steps.source.label'),\n                          \"banner-title-subtext\": _unref(t)('epinio.applications.steps.source.subtext'),\n                          \"header-mode\": \"edit\",\n                          \"finish-mode\": \"done\",\n                          \"edit-first-step\": true,\n                          onCancel: cancel,\n                          onFinish: finish\n                        }, {\n                          source: _withCtx(() => [\n                            (source.value)\n                              ? (_openBlock(), _createBlock(AppSource, {\n                                  key: 0,\n                                  application: _ctx.value,\n                                  source: source.value,\n                                  mode: _ctx.mode,\n                                  info: epinioInfo.value,\n                                  onChange: updateSource,\n                                  onChangeAppInfo: updateInfo,\n                                  onChangeAppConfig: updateManifestConfigurations,\n                                  onValid: _cache[0] || (_cache[0] = ($event: any) => (steps[0].ready = $event))\n                                }, null, 8, [\"application\", \"source\", \"mode\", \"info\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          progress: _withCtx(({step}) => [\n                            _createVNode(AppProgress, {\n                              application: _ctx.value,\n                              source: source.value,\n                              bindings: bindings,\n                              mode: _ctx.mode,\n                              step: step\n                            }, null, 8, [\"application\", \"source\", \"bindings\", \"mode\", \"step\"])\n                          ]),\n                          _: 1\n                        }, 8, [\"steps\", \"banner-title\", \"banner-title-subtext\"])\n                      ])\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true),\n              _createVNode(Tab, {\n                \"label-key\": \"epinio.applications.steps.basics.label\",\n                name: \"info\",\n                weight: 20,\n                error: tabErrors.appInfo\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(AppInfo, {\n                    application: _ctx.value,\n                    mode: _ctx.mode,\n                    onChange: updateInfo,\n                    onValid: _cache[1] || (_cache[1] = ($event: any) => (validate($event, 'appInfo')))\n                  }, null, 8, [\"application\", \"mode\"])\n                ]),\n                _: 1\n              }, 8, [\"error\"]),\n              _createVNode(Tab, {\n                \"label-key\": \"epinio.applications.steps.configurations.label\",\n                name: \"configurations\",\n                weight: 10\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(AppConfiguration, {\n                    application: _ctx.value,\n                    \"initial-application\": _ctx.initialValue,\n                    mode: _ctx.mode,\n                    onChange: updateConfigurations\n                  }, null, 8, [\"application\", \"initial-application\", \"mode\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"class\", \"mode\", \"resource\", \"errors\", \"validation-passed\"]))\n}\n}\n\n})","<script lang=\"ts\" setup>\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport Application from '../models/applications';\nimport CruResource from '@shell/components/CruResource.vue';\nimport ResourceTabs from '@shell/components/form/ResourceTabs/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport Loading from '@shell/components/Loading.vue';\nimport AppInfo from '../components/application/AppInfo.vue';\nimport AppConfiguration from '../components/application/AppConfiguration.vue';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport { useEpinioBindAppsMixin } from './bind-apps-mixin';\n\nimport Wizard from '@shell/components/Wizard.vue';\nimport { createEpinioRoute } from '../utils/custom-routing';\nimport AppSource from '../components/application/AppSource.vue';\nimport AppProgress from '../components/application/AppProgress.vue';\nimport { EpinioAppSource, EPINIO_TYPES, EpinioAppInfo, EpinioAppBindings } from '../types';\nimport { allHash } from '@shell/utils/promise';\nimport { _EDIT } from '@shell/config/query-params';\n\nconst props = defineProps<{ \n  value: Application;\n  initialValue: Application;\n  mode: string;\n}>();\n\nconst { \n  doneParams,\n  doneRoute,\n} = useEpinioBindAppsMixin(props);\n\nconst store = useStore();\n\nconst t = store.getters['i18n/t'];\n\nconst bindings = reactive<EpinioAppBindings>({ configurations: [], services: [] });\nconst source = ref<EpinioAppSource>(props.value.appSource);\nconst errors = ref<string[]>([]);\nconst epinioInfo = ref();\nconst tabErrors = reactive<{ appInfo: boolean }>({ appInfo: false });\n\nconst steps = reactive([\n  {\n    name: 'source',\n    label: t('epinio.applications.steps.source.label'),\n    subtext: t('epinio.applications.steps.source.subtext'),\n    ready: false,\n    nextButton: {\n      labelKey: 'epinio.applications.steps.configurations.update',\n      style: 'btn role-primary bg-warning'\n    }\n  },\n  {\n    name: 'progress',\n    label: t('epinio.applications.steps.progress.label'),\n    subtext: t('epinio.applications.steps.progress.subtext'),\n    ready: false,\n    previousButton: { disable: true }\n  },\n]);\n\nif (source.value.git && store.$router.currentRoute._value.query?.commit) {\n  source.value.git.commit = store.$router.currentRoute._value.query.commit as string;\n}\n\nonMounted(async () => {\n  const hash = await allHash({\n    ns: store.dispatch('epinio/findAll', { type: EPINIO_TYPES.NAMESPACE }),\n    charts: store.dispatch('epinio/findAll', { type: EPINIO_TYPES.APP_CHARTS }),\n    info: store.dispatch('epinio/info'),\n  });\n\n  epinioInfo.value = (hash as { info: any }).info;\n});\n\nconst shouldShowButtons = computed(\n  () => (store.$router.currentRoute.value.hash === '#source' ? 'hide-buttons-deploy' : '')\n);\nconst showSourceTab = computed(() => {\n  return props.mode === _EDIT\n});\nconst validationPassed = computed(() => !Object.values(tabErrors).find((error) => error));\n\nconst done = () => {\n  if (!doneRoute) {\n    return;\n  }\n\n  store.$router.replace({\n    name:   doneRoute.value,\n    params: doneParams.value || { resource: props.value.type },\n  });\n}\n\n\nasync function save(saveCb: (success: boolean) => void) {\n  errors.value = [];\n  try {\n    await props.value.update();\n\n    await props.value.updateConfigurations(\n      props.initialValue.baseConfigurationsNames || [],\n      bindings.configurations || [],\n    );\n\n    await props.value.updateServices(\n      props.initialValue.services || [],\n      bindings.services || [],\n    );\n\n    await props.value.forceFetch();\n    saveCb(true);\n    done();\n  } catch (err) {\n    errors.value = epinioExceptionToErrorsArray(err);\n    saveCb(false);\n  }\n}\n\nfunction set(obj: Record<string, any>, changes: Record<string, any>) {\n  Object.entries(changes).forEach(([key, value]) => {\n    obj[key] = value;\n  });\n}\n\nfunction updateInfo(changes: EpinioAppInfo) {\n  props.value.meta = props.value.meta || {};\n  props.value.configuration = props.value.configuration || {};\n  set(props.value.meta, changes.meta);\n  set(props.value.configuration, changes.configuration);\n}\n\nfunction updateConfigurations(changes: EpinioAppBindings) {\n  Object.assign(bindings, changes);\n}\n\nfunction cancel() {\n  store.$router.replace(props.value.listLocation);\n}\n\nfunction finish() {\n  store.$router.replace(createEpinioRoute(`c-cluster-resource-id`, {\n    cluster: store.getters['clusterId'],\n    resource: props.value.type,\n    id: `${props.value.meta.namespace}/${props.value.meta.name}`,\n  }));\n}\n\nfunction updateSource(changes: EpinioAppSource) {\n  source.value = {} as EpinioAppSource;\n  const { appChart, ...cleanChanges } = changes;\n\n  props.value.configuration = props.value.configuration || {};\n\n  if (appChart) {\n    set(props.value.configuration, { appchart: appChart });\n  }\n\n  set(source.value, cleanChanges);\n}\n\nfunction updateManifestConfigurations(changes: string[]) {\n  set(props.value.configuration, { configurations: changes });\n}\n\nfunction validate(value: boolean, tab: string) {\n  if (tab) {\n    tabErrors[tab] = !value;\n  }\n\n  steps[0].ready = value;\n}\n</script>\n\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :class=\"shouldShowButtons\"\n    :can-yaml=\"false\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    :validation-passed=\"validationPassed\"\n    @error=\"(e : Error) => errors = epinioExceptionToErrorsArray(e)\"\n    @finish=\"save\"\n  >\n    <ResourceTabs\n      mode=\"mode\"\n    >\n      <Tab\n        v-if=\"showSourceTab\"\n        label-key=\"epinio.applications.steps.source.label\"\n        name=\"source\"\n        :weight=\"30\"\n      >\n        <div class=\"wizard-container\">\n          <Wizard\n            class=\"wizard\"\n            :steps=\"steps\"\n            :banner-title=\"t('epinio.applications.steps.source.label')\"\n            :banner-title-subtext=\"t('epinio.applications.steps.source.subtext')\"\n            header-mode=\"edit\"\n            finish-mode=\"done\"\n            :edit-first-step=\"true\"\n            @cancel=\"cancel\"\n            @finish=\"finish\"\n          >\n            <template #source>\n              <AppSource\n                v-if=\"source\"\n                :application=\"value\"\n                :source=\"source\"\n                :mode=\"mode\"\n                :info=\"epinioInfo\"\n                @change=\"updateSource\"\n                @changeAppInfo=\"updateInfo\"\n                @changeAppConfig=\"updateManifestConfigurations\"\n                @valid=\"steps[0].ready = $event\"\n              />\n            </template>\n            <template #progress=\"{step}\">\n              <AppProgress\n                :application=\"value\"\n                :source=\"source\"\n                :bindings=\"bindings\"\n                :mode=\"mode\"\n                :step=\"step\"\n              />\n            </template>\n          </Wizard>\n        </div>\n      </Tab>\n      \n      <Tab\n        label-key=\"epinio.applications.steps.basics.label\"\n        name=\"info\"\n        :weight=\"20\"\n        :error=\"tabErrors.appInfo\"\n      >\n        <AppInfo\n          :application=\"value\"\n          :mode=\"mode\"\n          @change=\"updateInfo\"\n          @valid=\"validate($event, 'appInfo')\"\n        />\n      </Tab>\n      <Tab\n        label-key=\"epinio.applications.steps.configurations.label\"\n        name=\"configurations\"\n        :weight=\"10\"\n      >\n        <AppConfiguration\n          :application=\"value\"\n          :initial-application=\"initialValue\"\n          :mode=\"mode\"\n          @change=\"updateConfigurations\"\n        />\n      </Tab>\n    </ResourceTabs>\n  </CruResource>\n</template>\n\n<style lang='scss' scoped>\n\n.wizard-container {\n  position: relative;\n\n  margin-bottom: -20px;\n  margin-right: -20px;\n\n  .wizard {\n    position: relative;\n    overflow: auto;\n\n    // This is a hack and is needed as the wizard's buttons are now `position: absolute; bottom: 0;` so appears over wizard content\n    // In the dashabord app chart install wizard this is applied to specific content winthin the wizard (scroll__content)\n    // We applied the same thing here\n    // Both places need to be removed and the padding added within the wizard component\n    .appSource, .progress-container {\n      padding-bottom: 75px;\n    }\n  }\n}\n\n</style>\n\n<style lang=\"scss\">\n.hide-buttons-deploy {\n  .cru__footer {\n    display: none !important;\n  }\n}\n\n</style>\n","import script from \"./applications.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./applications.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./applications.vue?vue&type=style&index=0&id=5e753384&lang=scss&scoped=true\"\nimport \"./applications.vue?vue&type=style&index=1&id=5e753384&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e753384\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".hide-buttons-deploy .cru__footer{display:none!important}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createVNode as _createVNode, isRef as _isRef, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 1 }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = { class: \"col span-6\" }\nconst _hoisted_4 = { class: \"row\" }\nconst _hoisted_5 = { class: \"col span-11\" }\n\nimport { useStore } from 'vuex';\nimport { ref, computed, onMounted, watch } from 'vue';\n\nimport EpinioConfiguration from '../models/configurations';\nimport { useEpinioBindAppsMixin } from './bind-apps-mixin';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport { EPINIO_TYPES, EpinioNamespace } from '../types';\n\nimport { sortBy } from '@shell/utils/sort';\nimport { _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading.vue';\nimport Banner from '@components/Banner/Banner.vue';\nimport KeyValue from '@shell/components/form/KeyValue.vue';\nimport CruResource from '@shell/components/CruResource.vue';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription.vue';\nimport { validateKubernetesName } from '@shell/utils/validators/kubernetes-name';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'configurations',\n  props: {\n    value: {},\n    initialValue: {},\n    mode: {}\n  },\n  setup(__props: any) {\n\nconst store = useStore();\nconst t = store.getters['i18n/t'];\n\nconst props = __props;\n\nconst { \n  doneParams,\n  doneRoute,\n  selectedApps, \n  nsAppOptions, \n  noApps, \n  updateConfigurationAppBindings,\n} = useEpinioBindAppsMixin(props);\n\nconst errors = ref<Array<any>>([]);\nconst pending = ref<boolean>(true);\nconst validationPassed = ref<boolean>(false);\n\nonMounted(async () => {\n  props.value.meta.namespace = props.initialValue.meta.namespace || \n    namespaces.value[0]?.metadata.name;\n  props.value.data = { ...props.initialValue.configuration?.details };\n  selectedApps.value = [...props.initialValue.configuration?.boundapps || []];\n\n  updateValidation();\n\n  pending.value = false;\n});\n\nconst isEdit = computed(() => {\n  return props.mode === _EDIT;\n});\n\nconst namespaces = computed(() => {\n  return sortBy(store.getters['epinio/all'](EPINIO_TYPES.NAMESPACE), 'name', false);\n});\n\nconst namespaceNames = computed(() => {\n  return namespaces.value.map((n: EpinioNamespace) => n.metadata.name);\n});\n\nconst done = () => {\n  if (!doneRoute) {\n    return;\n  }\n\n  store.$router.replace({\n    name:   doneRoute.value,\n    params: doneParams.value || { resource: props.value.type },\n  });\n}\n\nconst save = async (saveCb: (success: boolean) => void) => {\n  errors.value = [];\n\n  try {\n    if (!isEdit.value) {\n      await props.value.create();\n      await updateConfigurationAppBindings();\n      await store.dispatch(\n        'epinio/findAll', \n        { type: props.value.type, opt: { force: true } },\n      );\n    }\n\n    if (isEdit.value) {\n      await props.value.update();\n      await updateConfigurationAppBindings();\n      await props.value.forceFetch();\n    }\n\n    saveCb(true);\n    done();\n  } catch (err) {\n    console.log(err);\n    errors.value = epinioExceptionToErrorsArray(err);\n    saveCb(false);\n  }\n};\n\nconst updateValidation = () => {\n  const nameErrors = validateKubernetesName(\n    props.value?.meta.name || '', \n    t('epinio.namespace.name'), \n    store.getters, \n    undefined, \n    [],\n  );\n  \n  const nsErrors = validateKubernetesName(\n    props.value?.meta.namespace || '', \n    '', \n    store.getters, \n    undefined, \n    [],\n  );\n\n  if (nameErrors.length === 0 && nsErrors.length === 0) {\n    const dataValues = Object.entries(props.value?.data || {});\n    \n    if (!!dataValues.length) { // eslint-disable-line no-extra-boolean-cast\n      validationPassed.value = true;\n      return;\n    }\n  }\n\n  validationPassed.value = false;\n};\n\nwatch(\n  () => props.value.meta.namespace,\n  () => {\n    selectedApps.value = [];\n    updateValidation(); // For when a user is supplying their own ns\n  }\n);\n\nwatch(\n  () => props.value.meta.name,\n  () => {\n    updateValidation();\n  }\n);\n\nwatch(\n  () => props.value.data,\n  () => {\n    updateValidation();\n  },\n  { deep: true }\n);\n\nreturn (_ctx: any,_cache: any) => {\n  return (!_ctx.value || pending.value)\n    ? (_openBlock(), _createBlock(Loading, { key: 0 }))\n    : (_ctx.value)\n      ? (_openBlock(), _createBlock(CruResource, {\n          key: 1,\n          \"min-height\": '7em',\n          mode: _ctx.mode,\n          \"done-route\": _unref(doneRoute),\n          resource: _ctx.value,\n          \"can-yaml\": false,\n          errors: errors.value,\n          \"validation-passed\": validationPassed.value,\n          \"namespace-key\": \"meta.namespace\",\n          onError: _cache[2] || (_cache[2] = (e) => (errors.value = e)),\n          onFinish: save\n        }, {\n          default: _withCtx(() => [\n            (_ctx.value.isServiceRelated)\n              ? (_openBlock(), _createBlock(Banner, {\n                  key: 0,\n                  color: \"info\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_unref(t)('epinio.configurations.tableHeaders.service.tooltip')), 1)\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true),\n            (errors.value.length > 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(errors.value, (err, i) => {\n                    return (_openBlock(), _createBlock(Banner, {\n                      key: i,\n                      color: \"error\",\n                      label: err\n                    }, null, 8, [\"label\"]))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(NameNsDescription, {\n              \"name-key\": \"name\",\n              \"namespace-key\": \"namespace\",\n              \"namespaces-override\": namespaceNames.value,\n              \"create-namespace-override\": true,\n              \"description-hidden\": true,\n              value: _ctx.value.meta,\n              mode: _ctx.mode\n            }, null, 8, [\"namespaces-override\", \"value\", \"mode\"]),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"div\", _hoisted_3, [\n                _createVNode(LabeledSelect, {\n                  value: _unref(selectedApps),\n                  \"onUpdate:value\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(selectedApps) ? (selectedApps).value = $event : null)),\n                  loading: pending.value,\n                  disabled: _unref(noApps),\n                  options: _unref(nsAppOptions),\n                  searchable: true,\n                  mode: _ctx.mode,\n                  multiple: true,\n                  \"label-key\": 'epinio.configurations.bindApps.label',\n                  placeholder: _unref(noApps) ? _unref(t)('epinio.configurations.bindApps.placeholderNoOptions') : _unref(t)('epinio.configurations.bindApps.placeholderWithOptions')\n                }, null, 8, [\"value\", \"loading\", \"disabled\", \"options\", \"mode\", \"placeholder\"])\n              ])\n            ]),\n            _cache[3] || (_cache[3] = _createElementVNode(\"div\", { class: \"spacer\" }, null, -1)),\n            _createElementVNode(\"div\", _hoisted_4, [\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createVNode(KeyValue, {\n                  value: _ctx.value.data,\n                  \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.value.data) = $event)),\n                  \"initial-empty-row\": true,\n                  mode: _ctx.mode,\n                  title: _unref(t)('epinio.configurations.pairs.label'),\n                  \"title-protip\": _unref(t)('epinio.configurations.pairs.tooltip'),\n                  \"key-label\": _unref(t)('epinio.applications.create.envvar.keyLabel'),\n                  \"value-label\": _unref(t)('epinio.applications.create.envvar.valueLabel'),\n                  valueMarkdownMultiline: true,\n                  \"parse-lines-from-file\": true,\n                  \"parse-value-from-file\": true\n                }, null, 8, [\"value\", \"mode\", \"title\", \"title-protip\", \"key-label\", \"value-label\"])\n              ])\n            ])\n          ]),\n          _: 1,\n          __: [3]\n        }, 8, [\"mode\", \"done-route\", \"resource\", \"errors\", \"validation-passed\"]))\n      : _createCommentVNode(\"\", true)\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { useStore } from 'vuex';\nimport { ref, computed, onMounted, watch } from 'vue';\n\nimport EpinioConfiguration from '../models/configurations';\nimport { useEpinioBindAppsMixin } from './bind-apps-mixin';\nimport { epinioExceptionToErrorsArray } from '../utils/errors';\nimport { EPINIO_TYPES, EpinioNamespace } from '../types';\n\nimport { sortBy } from '@shell/utils/sort';\nimport { _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading.vue';\nimport Banner from '@components/Banner/Banner.vue';\nimport KeyValue from '@shell/components/form/KeyValue.vue';\nimport CruResource from '@shell/components/CruResource.vue';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription.vue';\nimport { validateKubernetesName } from '@shell/utils/validators/kubernetes-name';\n\nconst store = useStore();\nconst t = store.getters['i18n/t'];\n\nconst props = defineProps<{\n  value: EpinioConfiguration,\n  initialValue: EpinioConfiguration,\n  mode: string,\n}>();\n\nconst { \n  doneParams,\n  doneRoute,\n  selectedApps, \n  nsAppOptions, \n  noApps, \n  updateConfigurationAppBindings,\n} = useEpinioBindAppsMixin(props);\n\nconst errors = ref<Array<any>>([]);\nconst pending = ref<boolean>(true);\nconst validationPassed = ref<boolean>(false);\n\nonMounted(async () => {\n  props.value.meta.namespace = props.initialValue.meta.namespace || \n    namespaces.value[0]?.metadata.name;\n  props.value.data = { ...props.initialValue.configuration?.details };\n  selectedApps.value = [...props.initialValue.configuration?.boundapps || []];\n\n  updateValidation();\n\n  pending.value = false;\n});\n\nconst isEdit = computed(() => {\n  return props.mode === _EDIT;\n});\n\nconst namespaces = computed(() => {\n  return sortBy(store.getters['epinio/all'](EPINIO_TYPES.NAMESPACE), 'name', false);\n});\n\nconst namespaceNames = computed(() => {\n  return namespaces.value.map((n: EpinioNamespace) => n.metadata.name);\n});\n\nconst done = () => {\n  if (!doneRoute) {\n    return;\n  }\n\n  store.$router.replace({\n    name:   doneRoute.value,\n    params: doneParams.value || { resource: props.value.type },\n  });\n}\n\nconst save = async (saveCb: (success: boolean) => void) => {\n  errors.value = [];\n\n  try {\n    if (!isEdit.value) {\n      await props.value.create();\n      await updateConfigurationAppBindings();\n      await store.dispatch(\n        'epinio/findAll', \n        { type: props.value.type, opt: { force: true } },\n      );\n    }\n\n    if (isEdit.value) {\n      await props.value.update();\n      await updateConfigurationAppBindings();\n      await props.value.forceFetch();\n    }\n\n    saveCb(true);\n    done();\n  } catch (err) {\n    console.log(err);\n    errors.value = epinioExceptionToErrorsArray(err);\n    saveCb(false);\n  }\n};\n\nconst updateValidation = () => {\n  const nameErrors = validateKubernetesName(\n    props.value?.meta.name || '', \n    t('epinio.namespace.name'), \n    store.getters, \n    undefined, \n    [],\n  );\n  \n  const nsErrors = validateKubernetesName(\n    props.value?.meta.namespace || '', \n    '', \n    store.getters, \n    undefined, \n    [],\n  );\n\n  if (nameErrors.length === 0 && nsErrors.length === 0) {\n    const dataValues = Object.entries(props.value?.data || {});\n    \n    if (!!dataValues.length) { // eslint-disable-line no-extra-boolean-cast\n      validationPassed.value = true;\n      return;\n    }\n  }\n\n  validationPassed.value = false;\n};\n\nwatch(\n  () => props.value.meta.namespace,\n  () => {\n    selectedApps.value = [];\n    updateValidation(); // For when a user is supplying their own ns\n  }\n);\n\nwatch(\n  () => props.value.meta.name,\n  () => {\n    updateValidation();\n  }\n);\n\nwatch(\n  () => props.value.data,\n  () => {\n    updateValidation();\n  },\n  { deep: true }\n);\n</script>\n\n<template>\n  <Loading v-if=\"!value || pending\" />\n  <CruResource\n    v-else-if=\"value\"\n    :min-height=\"'7em'\"\n    :mode=\"mode\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :can-yaml=\"false\"\n    :errors=\"errors\"\n    :validation-passed=\"validationPassed\"\n    namespace-key=\"meta.namespace\"\n    @error=\"(e) => (errors = e)\"\n    @finish=\"save\"\n  >\n    <Banner\n      v-if=\"value.isServiceRelated\"\n      color=\"info\"\n    >\n      {{ t('epinio.configurations.tableHeaders.service.tooltip') }}\n    </Banner>\n    <div v-if=\"errors.length > 0\">\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </div>\n    <NameNsDescription\n      name-key=\"name\"\n      namespace-key=\"namespace\"\n      :namespaces-override=\"namespaceNames\"\n      :create-namespace-override=\"true\"\n      :description-hidden=\"true\"\n      :value=\"value.meta\"\n      :mode=\"mode\"\n    />\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model:value=\"selectedApps\"\n          :loading=\"pending\"\n          :disabled=\"noApps\"\n          :options=\"nsAppOptions\"\n          :searchable=\"true\"\n          :mode=\"mode\"\n          :multiple=\"true\"\n          :label-key=\"'epinio.configurations.bindApps.label'\"\n          :placeholder=\"noApps ? t('epinio.configurations.bindApps.placeholderNoOptions') : t('epinio.configurations.bindApps.placeholderWithOptions')\"\n        />\n      </div>\n    </div>\n    <div class=\"spacer\" />\n    <div class=\"row\">\n      <div class=\"col span-11\">\n        <KeyValue\n          v-model:value=\"value.data\"\n          :initial-empty-row=\"true\"\n          :mode=\"mode\"\n          :title=\"t('epinio.configurations.pairs.label')\"\n          :title-protip=\"t('epinio.configurations.pairs.tooltip')\"\n          :key-label=\"t('epinio.applications.create.envvar.keyLabel')\"\n          :value-label=\"t('epinio.applications.create.envvar.valueLabel')\"\n          :valueMarkdownMultiline=\"true\"\n          :parse-lines-from-file=\"true\"\n          :parse-value-from-file=\"true\"\n        />\n      </div>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\">\n.as-text-area {\n  width: 100% !important;\n}\n\n.value-container .file-selector{\n  margin-bottom: 20px;\n}\n</style>\n","import script from \"./configurations.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./configurations.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./configurations.vue?vue&type=style&index=0&id=4a2783be&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wizard-container[data-v-5e753384]{position:relative;margin-bottom:-20px;margin-right:-20px}.wizard-container .wizard[data-v-5e753384]{position:relative;overflow:auto}.wizard-container .wizard .appSource[data-v-5e753384],.wizard-container .wizard .progress-container[data-v-5e753384]{padding-bottom:75px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./configurations.vue?vue&type=style&index=0&id=4a2783be&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6d4c70e6\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["content","__esModule","default","module","id","locals","exports","add","___CSS_LOADER_EXPORT___","push","_hoisted_1","class","_defineComponent","__name","props","value","initialValue","mode","setup","__props","doneParams","doneRoute","useEpinioBindAppsMixin","store","useStore","t","getters","bindings","reactive","configurations","services","source","ref","appSource","errors","epinioInfo","tabErrors","appInfo","steps","name","label","subtext","ready","nextButton","labelKey","style","previousButton","disable","git","$router","currentRoute","_value","query","commit","onMounted","async","hash","allHash","ns","dispatch","type","EPINIO_TYPES","NAMESPACE","charts","APP_CHARTS","info","shouldShowButtons","computed","showSourceTab","_EDIT","validationPassed","Object","values","find","error","done","replace","params","resource","save","saveCb","update","updateConfigurations","baseConfigurationsNames","updateServices","forceFetch","err","epinioExceptionToErrorsArray","set","obj","changes","entries","forEach","key","updateInfo","meta","configuration","assign","cancel","listLocation","finish","createEpinioRoute","cluster","namespace","updateSource","appChart","cleanChanges","appchart","updateManifestConfigurations","validate","tab","_ctx","_cache","_openBlock","_createBlock","CruResource","_normalizeClass","onError","e","_unref","onFinish","_withCtx","_createVNode","ResourceTabs","Tab","weight","_createElementVNode","Wizard","onCancel","AppSource","application","onChange","onChangeAppInfo","onChangeAppConfig","onValid","$event","_createCommentVNode","progress","step","AppProgress","_","AppInfo","AppConfiguration","Loading","__exports__","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","selectedApps","nsAppOptions","noApps","updateConfigurationAppBindings","pending","namespaces","metadata","data","details","boundapps","updateValidation","isEdit","sortBy","namespaceNames","map","n","create","opt","force","console","log","nameErrors","validateKubernetesName","undefined","nsErrors","length","dataValues","watch","deep","isServiceRelated","Banner","color","_createTextVNode","_toDisplayString","_createElementBlock","_Fragment","_renderList","i","NameNsDescription","LabeledSelect","_isRef","loading","disabled","options","searchable","multiple","placeholder","KeyValue","title","valueMarkdownMultiline","__"],"sourceRoot":""}
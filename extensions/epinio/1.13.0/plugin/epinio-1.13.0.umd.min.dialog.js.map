{"version":3,"file":"epinio-1.13.0.umd.min.dialog.js","mappings":"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","sources":["webpack://epinio-1.13.0/./dialog/ExportAppDialog.vue?b0e7","webpack://epinio-1.13.0/./dialog/ExportAppDialog.vue?358d","webpack://epinio-1.13.0/./dialog/ExportAppDialog.vue?6824","webpack://epinio-1.13.0/./dialog/ExportAppDialog.vue","webpack://epinio-1.13.0/./dialog/ExportAppDialog.vue?d606","webpack://epinio-1.13.0/./dialog/LoginDialog.vue?b177","webpack://epinio-1.13.0/./dialog/LoginDialog.vue?3c68","webpack://epinio-1.13.0/./dialog/LoginDialog.vue","webpack://epinio-1.13.0/./dialog/LoginDialog.vue?a26c","webpack://epinio-1.13.0/./dialog/LoginDialog.vue?db2c"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./ExportAppDialog.vue?vue&type=style&index=0&id=06c89c66&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6996c0eb\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".export-app-dialog__title[data-v-06c89c66]{margin-bottom:0}.export-app-dialog__tab[data-v-06c89c66]{min-height:110px}.progress-info span[data-v-06c89c66]{display:block;margin-bottom:10px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"text-default-text export-app-dialog__title\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"progress-info text info mb-10 mt-20\"\n}\nconst _hoisted_3 = { key: 0 }\n\nimport { useStore } from 'vuex'\nimport {ref, computed, onMounted, onBeforeUnmount } from 'vue';\n\nimport JSZip from 'jszip';\n\nimport { APPLICATION_PARTS } from '../types';\nimport Banner from '@components/Banner/Banner.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport { downloadFile } from '@shell/utils/download';\nimport GenericPrompt from '@shell/dialog/GenericPrompt';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport PercentageBar from '@shell/components/PercentageBar';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ExportAppDialog',\n  props: {\n    resources: {}\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst store = useStore();\nconst t = store.getters['i18n/t'];\nconst emit = __emit;\n\nconst props = __props;\n\nconst showProgressBar = ref<boolean>(false);\nconst percentages = ref<object>({});\nconst step = ref<any>(null);\nconst cancelTokenSources:object = {};\nconst colorStops:object = { 0: '--primary', 100: '--primary' };\nconst genericPrompt = ref<HTMLElement>(null);\n\nconst partsWeight = {\n  [APPLICATION_PARTS.VALUES]: 0.1,\n  [APPLICATION_PARTS.CHART]:  0.1,\n  [APPLICATION_PARTS.IMAGE]:  0.7\n};\n\nconst zipParts = props.resources[0]?.applicationParts.filter(\n  (part) => part !== APPLICATION_PARTS.MANIFEST\n);\n\nonMounted(() => {\n  document.addEventListener('keyup', escapeHandler);\n});\n\nonBeforeUnmount(() => {\n  //Need to wait to remove this so the event listener isn't removed before a \n  //download is cancelled.\n  setTimeout(() => {\n    document.removeEventListener('keyup', escapeHandler);\n  }, 2000);\n});\n\nconst progressBar = computed({\n  get() {\n    return Object.keys(percentages.value).reduce(\n      (acc, part) => acc + (percentages.value[part] * (partsWeight[part] || 1)), 0);\n  },\n  set(value) {\n    percentages.value = { value };\n  }\n}, { immediate: true });\n\nconst exportApplicationManifest = async () => {\n  enableDownload();\n  const resource = props.resources[0];\n\n  const chartZip = async(files) => {\n    const zip = new JSZip();\n\n    for (const fileName in files) {\n      const extension = {\n        [APPLICATION_PARTS.VALUES]: 'yaml',\n        [APPLICATION_PARTS.CHART]:  'tar.gz',\n        [APPLICATION_PARTS.IMAGE]:  'tar',\n      };\n\n      zip.file(`${ fileName }.${ extension[fileName] }`, files[fileName]);\n    }\n\n    const contents = await zip.generateAsync({\n      type: 'blob',\n      compression: 'STORE',\n    });\n\n    await downloadFile(\n      `${ resource.meta.name }-helm-chart.zip`,\n      contents,\n      'application/zip',\n    );\n  };\n\n  if (store.$router.currentRoute._value.hash === '#manifest') {\n    await resource.createManifest();\n  } else {\n    const partsData = await zipParts.reduce(async(acc, part) => ({\n      ...await acc,\n      [part]: await fetchPart(resource, part),\n    }), Promise.resolve({}));\n\n    if (Object.values(partsData).some((part) => !part)) {\n      return;\n    }\n\n    toggleStep('zip');\n\n    await chartZip(partsData);\n\n    progressBar.value = 100;\n    await delayBeforeClose(1500);\n  }\n}\n\nconst config = {\n  title:       t('promptRemove.title'),\n  applyMode:   'export',\n  applyAction: exportApplicationManifest,\n};\n\nconst getCancelToken = () => {\n  return store.$axios.CancelToken;\n}\n\nconst fetchPart = async (resource, part) => {\n  toggleStep(part, true);\n  cancelTokenSources[part] = getCancelToken().source();\n\n  return await resource.fetchPart(\n    part, {\n      onDownloadProgress: (progressEvent) => {\n        const total = progressEvent.event.srcElement.getResponseHeader('content-length') ||\n          progressEvent.event.srcElement.getResponseHeader('proxy-content-length');\n\n        if (total) {\n          percentages.value[part] = Math.round(progressEvent.loaded * 100 / total);\n        }\n\n        if (progressEvent.loaded > 0) {\n          toggleStep(part);\n        }\n      },\n      cancelToken: cancelTokenSources[part].token\n    }).catch((thrown) => {\n      if (!store.$axios.isCancel(thrown)) {\n        disableDownload();\n\n        // Override only messages of server errors\n        const message = thrown.message ?? t(\n          'epinio.applications.export.chartValuesImages.error', \n          { part },\n        );\n\n        throw new Error(message);\n      }\n    }\n  );\n}\n\nconst fetchCancel = () => {\n  // Cancel pending api requests, see https://axios-http.com/docs/cancellation\n  Object.keys(cancelTokenSources).forEach(\n    (part) => cancelTokenSources[part].\n      cancel(`${ part } part: download cancelled.`)\n  );\n}\n\nconst close = () => {\n  if (store.$router.currentRoute._value.hash !== '#manifest') {\n    fetchCancel();\n  }\n\n  emit('close');\n}\n\nconst escapeHandler = (e: KeyboardEvent) => {\n  if (e.key === 'Escape') {\n    close();\n  }\n}\n\nconst resetErrors = () => {\n  if (genericPrompt.value) {\n    genericPrompt.value.errors = [];\n  }\n}\n\nconst enableDownload = () => {\n  resetErrors();\n  showProgressBar.value = true;\n}\n\nconst disableDownload = () => {\n  fetchCancel();\n  showProgressBar.value = false;\n  progressBar.value = 0;\n  toggleStep(null);\n}\n\nconst delayBeforeClose = async (seconds) => {\n  return await new Promise((resolve) => setTimeout(resolve, seconds));\n}\n\nconst toggleStep = (part, isPreparing = false) => {\n  step.value = part ? `${ isPreparing ? 'preparing' : 'download' }.${ part }` : null;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(GenericPrompt), _mergeProps({\n    ref_key: \"genericPrompt\",\n    ref: genericPrompt\n  }, config, { onClose: close }), {\n    title: _withCtx(() => [\n      _createElementVNode(\"h4\", _hoisted_1, _toDisplayString(_unref(t)('epinio.applications.export.label')), 1)\n    ]),\n    body: _withCtx(() => [\n      _createVNode(Tabbed, { onChanged: resetErrors }, {\n        default: _withCtx(() => [\n          _createVNode(Tab, {\n            \"label-key\": \"epinio.applications.export.manifest.title\",\n            name: \"manifest\",\n            weight: 3,\n            class: \"export-app-dialog__tab\"\n          }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"p\", null, _toDisplayString(_unref(t)('epinio.applications.export.manifest.description')), 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(Tab, {\n            \"label-key\": \"epinio.applications.export.chartValuesImages.title\",\n            name: \"chart\",\n            weight: 2,\n            class: \"export-app-dialog__tab\"\n          }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"p\", null, _toDisplayString(_unref(t)('epinio.applications.export.chartValuesImages.description')), 1),\n              _createVNode(Banner, { color: \"info\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_unref(t)('epinio.applications.export.chartValuesImages.banner')), 1)\n                ]),\n                _: 1\n              }),\n              (showProgressBar.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                    (step.value)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(_unref(t)(`epinio.applications.export.chartValuesImages.steps.${ step.value }`)), 1))\n                      : _createCommentVNode(\"\", true),\n                    _createVNode(_unref(PercentageBar), {\n                      class: \"progress-bar\",\n                      modelValue: progressBar.value,\n                      \"color-stops\": colorStops,\n                      \"preferred-direction\": \"MORE\"\n                    }, null, 8, [\"modelValue\"])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }, 16))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { useStore } from 'vuex'\nimport {ref, computed, onMounted, onBeforeUnmount } from 'vue';\n\nimport JSZip from 'jszip';\n\nimport { APPLICATION_PARTS } from '../types';\nimport Banner from '@components/Banner/Banner.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport { downloadFile } from '@shell/utils/download';\nimport GenericPrompt from '@shell/dialog/GenericPrompt';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport PercentageBar from '@shell/components/PercentageBar';\n\nconst store = useStore();\nconst t = store.getters['i18n/t'];\nconst emit = defineEmits<{\n  (e: 'close'): void\n}>();\n\nconst props = defineProps<{\n  resources: Array,\n}>();\n\nconst showProgressBar = ref<boolean>(false);\nconst percentages = ref<object>({});\nconst step = ref<any>(null);\nconst cancelTokenSources:object = {};\nconst colorStops:object = { 0: '--primary', 100: '--primary' };\nconst genericPrompt = ref<HTMLElement>(null);\n\nconst partsWeight = {\n  [APPLICATION_PARTS.VALUES]: 0.1,\n  [APPLICATION_PARTS.CHART]:  0.1,\n  [APPLICATION_PARTS.IMAGE]:  0.7\n};\n\nconst zipParts = props.resources[0]?.applicationParts.filter(\n  (part) => part !== APPLICATION_PARTS.MANIFEST\n);\n\nonMounted(() => {\n  document.addEventListener('keyup', escapeHandler);\n});\n\nonBeforeUnmount(() => {\n  //Need to wait to remove this so the event listener isn't removed before a \n  //download is cancelled.\n  setTimeout(() => {\n    document.removeEventListener('keyup', escapeHandler);\n  }, 2000);\n});\n\nconst progressBar = computed({\n  get() {\n    return Object.keys(percentages.value).reduce(\n      (acc, part) => acc + (percentages.value[part] * (partsWeight[part] || 1)), 0);\n  },\n  set(value) {\n    percentages.value = { value };\n  }\n}, { immediate: true });\n\nconst exportApplicationManifest = async () => {\n  enableDownload();\n  const resource = props.resources[0];\n\n  const chartZip = async(files) => {\n    const zip = new JSZip();\n\n    for (const fileName in files) {\n      const extension = {\n        [APPLICATION_PARTS.VALUES]: 'yaml',\n        [APPLICATION_PARTS.CHART]:  'tar.gz',\n        [APPLICATION_PARTS.IMAGE]:  'tar',\n      };\n\n      zip.file(`${ fileName }.${ extension[fileName] }`, files[fileName]);\n    }\n\n    const contents = await zip.generateAsync({\n      type: 'blob',\n      compression: 'STORE',\n    });\n\n    await downloadFile(\n      `${ resource.meta.name }-helm-chart.zip`,\n      contents,\n      'application/zip',\n    );\n  };\n\n  if (store.$router.currentRoute._value.hash === '#manifest') {\n    await resource.createManifest();\n  } else {\n    const partsData = await zipParts.reduce(async(acc, part) => ({\n      ...await acc,\n      [part]: await fetchPart(resource, part),\n    }), Promise.resolve({}));\n\n    if (Object.values(partsData).some((part) => !part)) {\n      return;\n    }\n\n    toggleStep('zip');\n\n    await chartZip(partsData);\n\n    progressBar.value = 100;\n    await delayBeforeClose(1500);\n  }\n}\n\nconst config = {\n  title:       t('promptRemove.title'),\n  applyMode:   'export',\n  applyAction: exportApplicationManifest,\n};\n\nconst getCancelToken = () => {\n  return store.$axios.CancelToken;\n}\n\nconst fetchPart = async (resource, part) => {\n  toggleStep(part, true);\n  cancelTokenSources[part] = getCancelToken().source();\n\n  return await resource.fetchPart(\n    part, {\n      onDownloadProgress: (progressEvent) => {\n        const total = progressEvent.event.srcElement.getResponseHeader('content-length') ||\n          progressEvent.event.srcElement.getResponseHeader('proxy-content-length');\n\n        if (total) {\n          percentages.value[part] = Math.round(progressEvent.loaded * 100 / total);\n        }\n\n        if (progressEvent.loaded > 0) {\n          toggleStep(part);\n        }\n      },\n      cancelToken: cancelTokenSources[part].token\n    }).catch((thrown) => {\n      if (!store.$axios.isCancel(thrown)) {\n        disableDownload();\n\n        // Override only messages of server errors\n        const message = thrown.message ?? t(\n          'epinio.applications.export.chartValuesImages.error', \n          { part },\n        );\n\n        throw new Error(message);\n      }\n    }\n  );\n}\n\nconst fetchCancel = () => {\n  // Cancel pending api requests, see https://axios-http.com/docs/cancellation\n  Object.keys(cancelTokenSources).forEach(\n    (part) => cancelTokenSources[part].\n      cancel(`${ part } part: download cancelled.`)\n  );\n}\n\nconst close = () => {\n  if (store.$router.currentRoute._value.hash !== '#manifest') {\n    fetchCancel();\n  }\n\n  emit('close');\n}\n\nconst escapeHandler = (e: KeyboardEvent) => {\n  if (e.key === 'Escape') {\n    close();\n  }\n}\n\nconst resetErrors = () => {\n  if (genericPrompt.value) {\n    genericPrompt.value.errors = [];\n  }\n}\n\nconst enableDownload = () => {\n  resetErrors();\n  showProgressBar.value = true;\n}\n\nconst disableDownload = () => {\n  fetchCancel();\n  showProgressBar.value = false;\n  progressBar.value = 0;\n  toggleStep(null);\n}\n\nconst delayBeforeClose = async (seconds) => {\n  return await new Promise((resolve) => setTimeout(resolve, seconds));\n}\n\nconst toggleStep = (part, isPreparing = false) => {\n  step.value = part ? `${ isPreparing ? 'preparing' : 'download' }.${ part }` : null;\n}\n</script>\n\n<template>\n  <GenericPrompt\n    ref=\"genericPrompt\"\n    v-bind=\"config\"\n    @close=\"close\"\n  >\n    <template #title>\n      <h4\n        class=\"text-default-text export-app-dialog__title\"\n      >\n        {{ t('epinio.applications.export.label') }}\n      </h4>\n    </template>\n\n    <template #body>\n      <Tabbed @changed=\"resetErrors\">\n        <Tab\n          label-key=\"epinio.applications.export.manifest.title\"\n          name=\"manifest\"\n          :weight=\"3\"\n          class=\"export-app-dialog__tab\"\n        >\n          <p>\n            {{ t('epinio.applications.export.manifest.description') }}\n          </p>\n        </Tab>\n\n        <Tab\n          label-key=\"epinio.applications.export.chartValuesImages.title\"\n          name=\"chart\"\n          :weight=\"2\"\n          class=\"export-app-dialog__tab\"\n        >\n          <p>\n            {{ t('epinio.applications.export.chartValuesImages.description') }}\n          </p>\n          <Banner\n            color=\"info\"\n          >\n            {{ t('epinio.applications.export.chartValuesImages.banner') }}\n          </Banner>\n\n          <div\n            v-if=\"showProgressBar\"\n            class=\"progress-info text info mb-10 mt-20\"\n          >\n            <span v-if=\"step\">\n              {{ t(`epinio.applications.export.chartValuesImages.steps.${ step }`) }}\n            </span>\n            <PercentageBar\n              class=\"progress-bar\"\n              :modelValue=\"progressBar\"\n              :color-stops=\"colorStops\"\n              preferred-direction=\"MORE\"\n            />\n          </div>\n        </Tab>\n      </Tabbed>\n    </template>\n  </GenericPrompt>\n</template>\n<style lang='scss' scoped>\n.export-app-dialog {\n  &__title {\n    margin-bottom: 0;\n  }\n  &__tab {\n    min-height: 110px;\n  }\n}\n\n.progress-info {\n  span {\n    display: block;\n    margin-bottom: 10px;\n  }\n}\n</style>\n","import script from \"./ExportAppDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ExportAppDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ExportAppDialog.vue?vue&type=style&index=0&id=06c89c66&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06c89c66\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./LoginDialog.vue?vue&type=style&index=0&id=30e141e7&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5a5d999e\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"login-dialog\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = {\n  key: 2,\n  class: \"local\"\n}\nconst _hoisted_5 = { class: \"mb-20\" }\nconst _hoisted_6 = { class: \"mb-20\" }\nconst _hoisted_7 = {\n  key: 3,\n  class: \"mt-20 text-center\"\n}\nconst _hoisted_8 = {\n  key: 4,\n  class: \"mt-20 text-center\"\n}\n\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { ref, onMounted } from 'vue';\n\nimport epinioAuth, { EpinioAuthTypes } from '../utils/auth';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\nimport { EpinioCluster } from '../models/cluster';\n\nimport { Banner } from '@components/Banner';\nimport Password from '@shell/components/form/Password';\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'LoginDialog',\n  props: {\n    cluster: {}\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst store = useStore();\n\nconst emit = __emit;\n\nconst props = __props\n\nconst PROVIDER_TYPES = {\n  LOCAL: 'local',\n  DEX:   'dex',\n};\n\nconst username = ref<string>('');\nconst password = ref<string>('');\nconst selectedAuthType = ref<string>('');\nconst busy = ref<boolean>(false);\n\nlet errors: Error[] = [];\nlet selectedTab: string;\n\nonMounted(() => {\n  if (!props.cluster.oidcEnabled) {\n    selectedAuthType.value = PROVIDER_TYPES.LOCAL;\n  } else {\n    selectedAuthType.value = PROVIDER_TYPES.DEX;\n  }\n})\n\nconst selectType = (type: string) => {\n  errors = [];\n  selectedAuthType.value = type as string;\n}\n\nconst login = async (provider: string) => {\n  busy.value = true;\n  errors = [];\n\n  try {\n    switch (provider) {\n      case PROVIDER_TYPES.LOCAL:\n        if (!username.value) {\n          errors.push(new Error('Username'));\n        }\n        if (!password.value) {\n          errors.push(new Error('Password'));\n        }\n        if (errors.length) {\n          throw new Error(`${ errors.join('/') } Required`);\n        }\n\n        await epinioAuth.login(props.cluster.createAuthConfig(\n          EpinioAuthTypes.LOCAL, {\n            username: username.value,\n            password: password.value,\n            $axios:   axios,\n          }\n        ));\n        break;\n      case PROVIDER_TYPES.DEX:\n        await epinioAuth.login(props.cluster.createAuthConfig(EpinioAuthTypes.DEX));\n        break;\n      default:\n        throw new Error(`Unknown log in type: ${ selectedTab }`);\n    }\n    props.cluster.loggedIn = true;\n\n    //Ensure the store knows the dialog has been closed. \n    emit('close');\n\n    store.$router.push({\n      name:   'epinio-c-cluster-dashboard',\n      params: { cluster: props.cluster.id }\n    });\n  } catch (err) {\n    errors.push(...exceptionToErrorsArray(err));\n  }\n\n  busy.value = false;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_unref(errors).length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(errors), (err, idx) => {\n            return (_openBlock(), _createElementBlock(\"div\", { key: idx }, [\n              _createVNode(_unref(Banner), {\n                color: \"error\",\n                label: _unref(stringify)(err.Message || err)\n              }, null, 8, [\"label\"])\n            ]))\n          }), 128))\n        ]))\n      : _createCommentVNode(\"\", true),\n    (selectedAuthType.value == PROVIDER_TYPES.DEX)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            ref: \"btn\",\n            class: _normalizeClass([{'disabled': busy.value}, \"btn bg-primary\"]),\n            style: {\"font-size\":\"18px\"},\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (!busy.value && login(PROVIDER_TYPES.DEX)))\n          }, _toDisplayString(_ctx.t('epinio.login.genericProvider')), 3)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (selectedAuthType.value === PROVIDER_TYPES.LOCAL)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _createElementVNode(\"form\", null, [\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createVNode(_unref(LabeledInput), {\n                id: \"username\",\n                value: username.value,\n                \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => ((username).value = $event)),\n                label: _ctx.t('login.username'),\n                required: true\n              }, null, 8, [\"value\", \"label\"])\n            ]),\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createVNode(_unref(Password), {\n                id: \"password\",\n                value: password.value,\n                \"onUpdate:value\": _cache[2] || (_cache[2] = ($event: any) => ((password).value = $event)),\n                label: _ctx.t('login.password'),\n                required: true\n              }, null, 8, [\"value\", \"label\"])\n            ])\n          ]),\n          _createElementVNode(\"button\", {\n            ref: \"btn\",\n            class: _normalizeClass([\"btn bg-primary\", {'disabled': busy.value}]),\n            style: {\"font-size\":\"18px\"},\n            onClick: _cache[3] || (_cache[3] = ($event: any) => (!busy.value && login(PROVIDER_TYPES.LOCAL)))\n          }, _toDisplayString(_ctx.t(_ctx.cluster.oidcEnabled ? 'login.loginWithLocal' : 'epinio.login.login')), 3)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (selectedAuthType.value === PROVIDER_TYPES.DEX)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n          _createElementVNode(\"a\", {\n            class: _normalizeClass({'disabled': busy.value}),\n            role: \"button\",\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (!busy.value && selectType(PROVIDER_TYPES.LOCAL)))\n          }, _toDisplayString(_ctx.t('login.useLocal')), 3)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.cluster.oidcEnabled && selectedAuthType.value === PROVIDER_TYPES.LOCAL)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"a\", {\n            class: _normalizeClass({'disabled': busy.value}),\n            role: \"button\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (!busy.value && selectType(PROVIDER_TYPES.DEX)))\n          }, _toDisplayString(_ctx.t('epinio.login.useGenericProvider', {})), 3)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { ref, onMounted } from 'vue';\n\nimport epinioAuth, { EpinioAuthTypes } from '../utils/auth';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\nimport { EpinioCluster } from '../models/cluster';\n\nimport { Banner } from '@components/Banner';\nimport Password from '@shell/components/form/Password';\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nconst store = useStore();\n\nconst emit = defineEmits<{\n  (e: 'close'): void\n}>();\n\nconst props = defineProps<{\n  cluster: EpinioCluster,\n}>()\n\nconst PROVIDER_TYPES = {\n  LOCAL: 'local',\n  DEX:   'dex',\n};\n\nconst username = ref<string>('');\nconst password = ref<string>('');\nconst selectedAuthType = ref<string>('');\nconst busy = ref<boolean>(false);\n\nlet errors: Error[] = [];\nlet selectedTab: string;\n\nonMounted(() => {\n  if (!props.cluster.oidcEnabled) {\n    selectedAuthType.value = PROVIDER_TYPES.LOCAL;\n  } else {\n    selectedAuthType.value = PROVIDER_TYPES.DEX;\n  }\n})\n\nconst selectType = (type: string) => {\n  errors = [];\n  selectedAuthType.value = type as string;\n}\n\nconst login = async (provider: string) => {\n  busy.value = true;\n  errors = [];\n\n  try {\n    switch (provider) {\n      case PROVIDER_TYPES.LOCAL:\n        if (!username.value) {\n          errors.push(new Error('Username'));\n        }\n        if (!password.value) {\n          errors.push(new Error('Password'));\n        }\n        if (errors.length) {\n          throw new Error(`${ errors.join('/') } Required`);\n        }\n\n        await epinioAuth.login(props.cluster.createAuthConfig(\n          EpinioAuthTypes.LOCAL, {\n            username: username.value,\n            password: password.value,\n            $axios:   axios,\n          }\n        ));\n        break;\n      case PROVIDER_TYPES.DEX:\n        await epinioAuth.login(props.cluster.createAuthConfig(EpinioAuthTypes.DEX));\n        break;\n      default:\n        throw new Error(`Unknown log in type: ${ selectedTab }`);\n    }\n    props.cluster.loggedIn = true;\n\n    //Ensure the store knows the dialog has been closed. \n    emit('close');\n\n    store.$router.push({\n      name:   'epinio-c-cluster-dashboard',\n      params: { cluster: props.cluster.id }\n    });\n  } catch (err) {\n    errors.push(...exceptionToErrorsArray(err));\n  }\n\n  busy.value = false;\n}\n</script>\n\n<template>\n  <div class=\"login-dialog\">\n    <div v-if=\"errors.length\">\n      <div\n        v-for=\"(err, idx) in errors\"\n        :key=\"idx\"\n      >\n        <Banner\n          color=\"error\"\n          :label=\"stringify(err.Message || err)\"\n        />\n      </div>\n    </div>\n    <div v-if=\"selectedAuthType == PROVIDER_TYPES.DEX\">\n      <button\n        ref=\"btn\"\n        :class=\"{'disabled': busy}\"\n        class=\"btn bg-primary\"\n        style=\"font-size: 18px;\"\n        @click=\"!busy && login(PROVIDER_TYPES.DEX)\"\n      >\n        {{ t('epinio.login.genericProvider') }}\n      </button>\n    </div>\n    <div\n      v-if=\"selectedAuthType === PROVIDER_TYPES.LOCAL\"\n      class=\"local\"\n    >\n      <form>\n        <div class=\"mb-20\">\n          <LabeledInput\n            id=\"username\"\n            v-model:value=\"username\"\n            :label=\"t('login.username')\"\n            :required=\"true\"\n          />\n        </div>\n        <div class=\"mb-20\">\n          <Password\n            id=\"password\"\n            v-model:value=\"password\"\n            :label=\"t('login.password')\"\n            :required=\"true\"\n          />\n        </div>\n      </form>\n      <button\n        ref=\"btn\"\n        class=\"btn bg-primary\"\n        :class=\"{'disabled': busy}\"\n        style=\"font-size: 18px;\"\n        @click=\"!busy && login(PROVIDER_TYPES.LOCAL)\"\n      >\n        {{ t(cluster.oidcEnabled ? 'login.loginWithLocal' : 'epinio.login.login') }}\n      </button>\n    </div>\n\n    <div\n      v-if=\"selectedAuthType === PROVIDER_TYPES.DEX\"\n      class=\"mt-20 text-center\"\n    >\n      <a\n        :class=\"{'disabled': busy}\"\n        role=\"button\"\n        @click=\"!busy && selectType(PROVIDER_TYPES.LOCAL)\"\n      >\n        {{ t('login.useLocal') }}\n      </a>\n    </div>\n    <div\n      v-if=\"cluster.oidcEnabled && selectedAuthType === PROVIDER_TYPES.LOCAL\"\n      class=\"mt-20 text-center\"\n    >\n      <a\n        :class=\"{'disabled': busy}\"\n        role=\"button\"\n        @click=\"!busy && selectType(PROVIDER_TYPES.DEX)\"\n      >\n        {{ t('epinio.login.useGenericProvider', {}) }}\n      </a>\n    </div>\n  </div>\n</template>\n<style lang='scss' scoped>\n$min-width: 400px;\n\n.login-dialog {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  min-height: 240px;\n\n  .banner {\n    min-width: $min-width;\n  }\n\n  .local {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .labeled-input, .password {\n      min-width: $min-width;\n    }\n  }\n}\n</style>\n","import script from \"./LoginDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LoginDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LoginDialog.vue?vue&type=style&index=0&id=30e141e7&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30e141e7\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".login-dialog[data-v-30e141e7]{padding:20px;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:240px}.login-dialog .banner[data-v-30e141e7]{min-width:400px}.login-dialog .local[data-v-30e141e7]{display:flex;flex-direction:column;align-items:center}.login-dialog .local .labeled-input[data-v-30e141e7],.login-dialog .local .password[data-v-30e141e7]{min-width:400px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["content","__esModule","default","module","id","locals","exports","add","___CSS_LOADER_EXPORT___","push","_hoisted_1","class","_hoisted_2","key","_hoisted_3","_defineComponent","__name","props","resources","emits","setup","__props","emit","__emit","store","useStore","t","getters","showProgressBar","ref","percentages","step","cancelTokenSources","colorStops","genericPrompt","partsWeight","APPLICATION_PARTS","VALUES","CHART","IMAGE","zipParts","applicationParts","filter","part","MANIFEST","onMounted","document","addEventListener","escapeHandler","onBeforeUnmount","setTimeout","removeEventListener","progressBar","computed","get","Object","keys","value","reduce","acc","set","immediate","exportApplicationManifest","async","enableDownload","resource","chartZip","zip","JSZip","fileName","files","extension","file","contents","generateAsync","type","compression","downloadFile","meta","name","$router","currentRoute","_value","hash","createManifest","partsData","fetchPart","Promise","resolve","values","some","toggleStep","delayBeforeClose","config","title","applyMode","applyAction","getCancelToken","$axios","CancelToken","source","onDownloadProgress","progressEvent","total","event","srcElement","getResponseHeader","Math","round","loaded","cancelToken","token","catch","thrown","isCancel","_thrown$message","disableDownload","message","Error","fetchCancel","forEach","cancel","close","e","resetErrors","errors","seconds","isPreparing","_ctx","_cache","_openBlock","_createBlock","_unref","GenericPrompt","_mergeProps","ref_key","onClose","_withCtx","_createElementVNode","_toDisplayString","body","_createVNode","Tabbed","onChanged","Tab","weight","_","Banner","color","_createTextVNode","_createElementBlock","_createCommentVNode","PercentageBar","modelValue","__exports__","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","cluster","PROVIDER_TYPES","LOCAL","DEX","username","password","selectedAuthType","busy","selectedTab","oidcEnabled","selectType","login","provider","length","join","epinioAuth","createAuthConfig","EpinioAuthTypes","axios","loggedIn","params","err","exceptionToErrorsArray","_Fragment","_renderList","idx","label","stringify","Message","_normalizeClass","style","onClick","$event","LabeledInput","required","Password","role"],"sourceRoot":""}